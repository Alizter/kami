//
// Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
//
// On Fri Apr 26 17:29:35 EDT 2019
//
//
// Ports:
// Name                         I/O  size props
// obtain_rq_get                  O    65 reg
// RDY_obtain_rq_get              O     1 reg
// RDY_send_rs_put                O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// send_rs_put                    I    32 reg
// EN_send_rs_put                 I     1
// EN_obtain_rq_get               I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTop(CLK,
	     RST_N,

	     EN_obtain_rq_get,
	     obtain_rq_get,
	     RDY_obtain_rq_get,

	     send_rs_put,
	     EN_send_rs_put,
	     RDY_send_rs_put);
  input  CLK;
  input  RST_N;

  // actionvalue method obtain_rq_get
  input  EN_obtain_rq_get;
  output [64 : 0] obtain_rq_get;
  output RDY_obtain_rq_get;

  // action method send_rs_put
  input  [31 : 0] send_rs_put;
  input  EN_send_rs_put;
  output RDY_send_rs_put;

  // signals for module outputs
  wire [64 : 0] obtain_rq_get;
  wire RDY_obtain_rq_get, RDY_send_rs_put;

  // register pgmInitBase
  reg [31 : 0] pgmInitBase;
  wire [31 : 0] pgmInitBase$D_IN;
  wire pgmInitBase$EN;

  // register pgmInitOfs
  reg [4 : 0] pgmInitOfs;
  wire [4 : 0] pgmInitOfs$D_IN;
  wire pgmInitOfs$EN;

  // register pgmInitOn
  reg pgmInitOn;
  wire pgmInitOn$D_IN, pgmInitOn$EN;

  // register proc_m11_stall
  reg proc_m11_stall;
  wire proc_m11_stall$D_IN, proc_m11_stall$EN;

  // register proc_m11_stalled
  reg [149 : 0] proc_m11_stalled;
  wire [149 : 0] proc_m11_stalled$D_IN;
  wire proc_m11_stalled$EN;

  // register proc_m1_elt_f2d
  reg [46 : 0] proc_m1_elt_f2d;
  wire [46 : 0] proc_m1_elt_f2d$D_IN;
  wire proc_m1_elt_f2d$EN;

  // register proc_m1_full_f2d
  reg proc_m1_full_f2d;
  wire proc_m1_full_f2d$D_IN, proc_m1_full_f2d$EN;

  // register proc_m2_rf
  reg [1023 : 0] proc_m2_rf;
  wire [1023 : 0] proc_m2_rf$D_IN;
  wire proc_m2_rf$EN;

  // register proc_m3_sbFlags
  reg [31 : 0] proc_m3_sbFlags;
  reg [31 : 0] proc_m3_sbFlags$D_IN;
  wire proc_m3_sbFlags$EN;

  // register proc_m4_elt_d2e
  reg [149 : 0] proc_m4_elt_d2e;
  reg [149 : 0] proc_m4_elt_d2e$D_IN;
  wire proc_m4_elt_d2e$EN;

  // register proc_m4_full_d2e
  reg proc_m4_full_d2e;
  wire proc_m4_full_d2e$D_IN, proc_m4_full_d2e$EN;

  // register proc_m5_elt_w2d
  reg [6 : 0] proc_m5_elt_w2d;
  wire [6 : 0] proc_m5_elt_w2d$D_IN;
  wire proc_m5_elt_w2d$EN;

  // register proc_m5_full_w2d
  reg proc_m5_full_w2d;
  wire proc_m5_full_w2d$D_IN, proc_m5_full_w2d$EN;

  // register proc_m6_eEpoch
  reg proc_m6_eEpoch;
  wire proc_m6_eEpoch$D_IN, proc_m6_eEpoch$EN;

  // register proc_m7_elt_e2w
  reg [181 : 0] proc_m7_elt_e2w;
  wire [181 : 0] proc_m7_elt_e2w$D_IN;
  wire proc_m7_elt_e2w$EN;

  // register proc_m7_full_e2w
  reg proc_m7_full_e2w;
  wire proc_m7_full_e2w$D_IN, proc_m7_full_e2w$EN;

  // register proc_m8_fEpoch
  reg proc_m8_fEpoch;
  wire proc_m8_fEpoch$D_IN, proc_m8_fEpoch$EN;

  // register proc_m8_pc
  reg [6 : 0] proc_m8_pc;
  wire [6 : 0] proc_m8_pc$D_IN;
  wire proc_m8_pc$EN;

  // register proc_m8_pgm
  reg [1023 : 0] proc_m8_pgm;
  wire [1023 : 0] proc_m8_pgm$D_IN;
  wire proc_m8_pgm$EN;

  // register proc_m8_pinit
  reg proc_m8_pinit;
  wire proc_m8_pinit$D_IN, proc_m8_pinit$EN;

  // register proc_m8_pinitOfs
  reg [4 : 0] proc_m8_pinitOfs;
  wire [4 : 0] proc_m8_pinitOfs$D_IN;
  wire proc_m8_pinitOfs$EN;

  // ports of submodule rqs
  reg [64 : 0] rqs$D_IN;
  wire [64 : 0] rqs$D_OUT;
  wire rqs$CLR, rqs$DEQ, rqs$EMPTY_N, rqs$ENQ, rqs$FULL_N;

  // ports of submodule rss
  wire [31 : 0] rss$D_IN, rss$D_OUT;
  wire rss$CLR, rss$DEQ, rss$EMPTY_N, rss$ENQ, rss$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_proc_m11_reqLd,
       CAN_FIRE_RL_proc_m11_reqSt,
       CAN_FIRE_RL_proc_m11_wbNm,
       CAN_FIRE_RL_proc_m11_wbNmZ,
       WILL_FIRE_RL_pgmInitRq,
       WILL_FIRE_RL_proc_m10_execBypass,
       WILL_FIRE_RL_proc_m10_execNm,
       WILL_FIRE_RL_proc_m11_repLd,
       WILL_FIRE_RL_proc_m11_repSt,
       WILL_FIRE_RL_proc_m11_reqLd,
       WILL_FIRE_RL_proc_m11_reqLdZ,
       WILL_FIRE_RL_proc_m11_reqSt,
       WILL_FIRE_RL_proc_m11_wbNm,
       WILL_FIRE_RL_proc_m11_wbNmZ,
       WILL_FIRE_RL_proc_m11_wrongEpoch,
       WILL_FIRE_RL_proc_m8_instFetch,
       WILL_FIRE_RL_proc_m8_modifyPc,
       WILL_FIRE_RL_proc_m8_pgmInit,
       WILL_FIRE_RL_proc_m8_pgmInitEnd,
       WILL_FIRE_RL_proc_m9_decodeLd,
       WILL_FIRE_RL_proc_m9_decodeNm,
       WILL_FIRE_RL_proc_m9_decodeSt;

  // inputs to muxes for submodule ports
  wire [1023 : 0] MUX_proc_m2_rf$write_1__VAL_1,
		  MUX_proc_m2_rf$write_1__VAL_2;
  wire [181 : 0] MUX_proc_m7_elt_e2w$write_1__VAL_1,
		 MUX_proc_m7_elt_e2w$write_1__VAL_2;
  wire [149 : 0] MUX_proc_m4_elt_d2e$write_1__VAL_1,
		 MUX_proc_m4_elt_d2e$write_1__VAL_2,
		 MUX_proc_m4_elt_d2e$write_1__VAL_3;
  wire [64 : 0] MUX_rqs$enq_1__VAL_1,
		MUX_rqs$enq_1__VAL_2,
		MUX_rqs$enq_1__VAL_3;
  wire [31 : 0] MUX_proc_m3_sbFlags$write_1__VAL_1,
		MUX_proc_m3_sbFlags$write_1__VAL_3,
		MUX_proc_m3_sbFlags$write_1__VAL_4,
		MUX_proc_m3_sbFlags$write_1__VAL_5;
  wire MUX_proc_m11_stall$write_1__SEL_2,
       MUX_proc_m3_sbFlags$write_1__SEL_1,
       MUX_proc_m3_sbFlags$write_1__SEL_2,
       MUX_proc_m4_full_d2e$write_1__SEL_1,
       MUX_proc_m5_elt_w2d$write_1__PSEL_1,
       MUX_proc_m5_elt_w2d$write_1__PSEL_2,
       MUX_proc_m5_elt_w2d$write_1__SEL_1,
       MUX_proc_m6_eEpoch$write_1__SEL_1,
       MUX_proc_m7_full_e2w$write_1__SEL_1;

  // remaining internal signals
  reg [31 : 0] CASE_proc_m4_elt_d2e_BITS_29_TO_27_0x0_proc_m4_ETC__q7,
	       IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d492,
	       IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d516,
	       IF_proc_m4_elt_d2e_42_BITS_46_TO_40_94_EQ_0x0__ETC___d528,
	       SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243,
	       x_0_rawInst__h38418,
	       x_6__h49805,
	       x__h45888,
	       x__h55606,
	       x__h64251,
	       y__h55768,
	       y__h64413;
  reg [6 : 0] IF_proc_m11_stalled_34_BITS_29_TO_27_14_EQ_0x0_ETC___d943,
	      IF_proc_m7_elt_e2w_41_BITS_61_TO_59_91_EQ_0x0__ETC___d720,
	      x_10__h64026,
	      x_9__h55389;
  reg [1 : 0] x_4__h38686;
  reg CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3,
      CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4,
      SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194,
      SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330;
  wire [959 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d815,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d129;
  wire [895 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d810,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d122;
  wire [831 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d805,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d115;
  wire [767 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d800,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d108;
  wire [703 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d795,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d101;
  wire [639 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d790,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d94;
  wire [575 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d785,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d87;
  wire [511 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d780,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d80;
  wire [447 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d775,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d73;
  wire [383 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d770,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d66;
  wire [319 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d765,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d59;
  wire [255 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d760,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d52;
  wire [191 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d755,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d45;
  wire [127 : 0] IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d750,
		 IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d38,
		 _0_CONCAT_proc_m4_elt_d2e_42_BITS_110_TO_79_63__ETC___d523;
  wire [31 : 0] proc_m4_elt_d2e_42_BITS_110_TO_79_63_MINUS_pro_ETC___d500,
		proc_m4_elt_d2e_42_BITS_110_TO_79_63_SRL_proc__ETC___d506,
		x4251_MINUS_y4413__q6,
		x5606_MINUS_y5768__q5,
		x__h40636,
		x__h45784,
		x__h465,
		x__h50006,
		y__h50177,
		y__h50306;
  wire [11 : 0] proc_m1_elt_f2d_BITS_46_TO_35__q2,
		proc_m4_elt_d2e_BITS_46_TO_35__q1,
		x__h45834;
  wire [6 : 0] IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d707,
	       IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d709,
	       IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d930,
	       IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d932,
	       proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_0x4___d923,
	       proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_proc__ETC___d922,
	       proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_0x4___d700,
	       proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_proc__ETC___d699,
	       x_4__h38363,
	       x__h50069,
	       y__h55450,
	       y__h55892,
	       y__h64093,
	       y__h64537;
  wire [4 : 0] x_5__h46141, x__h35082, x__h472;
  wire NOT_IF_proc_m11_stalled_34_BITS_21_TO_15_01_EQ_ETC___d949,
       NOT_IF_proc_m7_elt_e2w_41_BITS_53_TO_47_78_EQ__ETC___d726,
       NOT_SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m_ETC___d354,
       NOT_proc_m4_full_d2e_56_57_AND_NOT_SEL_ARR_pro_ETC___d204,
       NOT_proc_m4_full_d2e_56_57_AND_NOT_SEL_ARR_pro_ETC___d335,
       SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d695,
       SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d711,
       SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d918,
       SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d934,
       proc_m7_elt_e2w_41_BIT_32_42_EQ_proc_m6_eEpoch_43___d544;

  // actionvalue method obtain_rq_get
  assign obtain_rq_get = rqs$D_OUT ;
  assign RDY_obtain_rq_get = rqs$EMPTY_N ;

  // action method send_rs_put
  assign RDY_send_rs_put = rss$FULL_N ;

  // submodule rqs
  FIFO2 #(.width(32'd65), .guarded(32'd1)) rqs(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(rqs$D_IN),
					       .ENQ(rqs$ENQ),
					       .DEQ(rqs$DEQ),
					       .CLR(rqs$CLR),
					       .D_OUT(rqs$D_OUT),
					       .FULL_N(rqs$FULL_N),
					       .EMPTY_N(rqs$EMPTY_N));

  // submodule rss
  FIFO2 #(.width(32'd32), .guarded(32'd1)) rss(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(rss$D_IN),
					       .ENQ(rss$ENQ),
					       .DEQ(rss$DEQ),
					       .CLR(rss$CLR),
					       .D_OUT(rss$D_OUT),
					       .FULL_N(rss$FULL_N),
					       .EMPTY_N(rss$EMPTY_N));

  // rule RL_pgmInitRq
  assign WILL_FIRE_RL_pgmInitRq = pgmInitOn && rqs$FULL_N ;

  // rule RL_proc_m8_pgmInit
  assign WILL_FIRE_RL_proc_m8_pgmInit =
	     !proc_m8_pinit && x__h35082 != 5'h0 && rss$EMPTY_N ;

  // rule RL_proc_m8_pgmInitEnd
  assign WILL_FIRE_RL_proc_m8_pgmInitEnd =
	     !proc_m8_pinit && x__h35082 == 5'h0 && rss$EMPTY_N ;

  // rule RL_proc_m8_instFetch
  assign WILL_FIRE_RL_proc_m8_instFetch = !proc_m1_full_f2d && proc_m8_pinit ;

  // rule RL_proc_m8_modifyPc
  assign WILL_FIRE_RL_proc_m8_modifyPc = proc_m8_pinit && proc_m5_full_w2d ;

  // rule RL_proc_m9_decodeLd
  assign WILL_FIRE_RL_proc_m9_decodeLd =
	     !proc_m5_full_w2d &&
	     NOT_proc_m4_full_d2e_56_57_AND_NOT_SEL_ARR_pro_ETC___d204 ;

  // rule RL_proc_m9_decodeSt
  assign WILL_FIRE_RL_proc_m9_decodeSt =
	     !proc_m5_full_w2d &&
	     NOT_proc_m4_full_d2e_56_57_AND_NOT_SEL_ARR_pro_ETC___d335 ;

  // rule RL_proc_m9_decodeNm
  assign WILL_FIRE_RL_proc_m9_decodeNm =
	     !proc_m5_full_w2d && !proc_m4_full_d2e &&
	     NOT_SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m_ETC___d354 ;

  // rule RL_proc_m10_execNm
  assign WILL_FIRE_RL_proc_m10_execNm =
	     !proc_m7_full_e2w && proc_m4_elt_d2e[149:148] == 2'h3 &&
	     proc_m4_full_d2e ;

  // rule RL_proc_m10_execBypass
  assign WILL_FIRE_RL_proc_m10_execBypass =
	     !proc_m7_full_e2w && proc_m4_elt_d2e[149:148] != 2'h3 &&
	     proc_m4_full_d2e ;

  // rule RL_proc_m11_wrongEpoch
  assign WILL_FIRE_RL_proc_m11_wrongEpoch =
	     !proc_m11_stall &&
	     !proc_m7_elt_e2w_41_BIT_32_42_EQ_proc_m6_eEpoch_43___d544 &&
	     proc_m7_full_e2w &&
	     !WILL_FIRE_RL_proc_m9_decodeNm &&
	     !WILL_FIRE_RL_proc_m9_decodeLd ;

  // rule RL_proc_m11_reqLd
  assign CAN_FIRE_RL_proc_m11_reqLd =
	     !proc_m11_stall && proc_m7_elt_e2w[179:175] != 5'd0 &&
	     proc_m7_elt_e2w_41_BIT_32_42_EQ_proc_m6_eEpoch_43___d544 &&
	     proc_m7_elt_e2w[181:180] == 2'h0 &&
	     rqs$FULL_N &&
	     proc_m7_full_e2w ;
  assign WILL_FIRE_RL_proc_m11_reqLd =
	     CAN_FIRE_RL_proc_m11_reqLd && !WILL_FIRE_RL_pgmInitRq ;

  // rule RL_proc_m11_reqLdZ
  assign WILL_FIRE_RL_proc_m11_reqLdZ =
	     !proc_m11_stall &&
	     proc_m7_elt_e2w_41_BIT_32_42_EQ_proc_m6_eEpoch_43___d544 &&
	     proc_m7_elt_e2w[181:180] == 2'h0 &&
	     proc_m7_elt_e2w[179:175] == 5'd0 &&
	     proc_m7_full_e2w &&
	     !proc_m5_full_w2d ;

  // rule RL_proc_m11_reqSt
  assign CAN_FIRE_RL_proc_m11_reqSt =
	     !proc_m11_stall &&
	     proc_m7_elt_e2w_41_BIT_32_42_EQ_proc_m6_eEpoch_43___d544 &&
	     proc_m7_elt_e2w[181:180] == 2'h1 &&
	     rqs$FULL_N &&
	     proc_m7_full_e2w ;
  assign WILL_FIRE_RL_proc_m11_reqSt =
	     CAN_FIRE_RL_proc_m11_reqSt && !WILL_FIRE_RL_pgmInitRq ;

  // rule RL_proc_m11_repLd
  assign WILL_FIRE_RL_proc_m11_repLd =
	     proc_m11_stalled[149:148] == 2'h0 && rss$EMPTY_N &&
	     proc_m11_stall &&
	     !proc_m5_full_w2d &&
	     !WILL_FIRE_RL_proc_m9_decodeNm &&
	     !WILL_FIRE_RL_proc_m9_decodeLd &&
	     !WILL_FIRE_RL_proc_m8_pgmInitEnd &&
	     !WILL_FIRE_RL_proc_m8_pgmInit ;

  // rule RL_proc_m11_repSt
  assign WILL_FIRE_RL_proc_m11_repSt =
	     proc_m11_stalled[149:148] == 2'h1 && rss$EMPTY_N &&
	     proc_m11_stall &&
	     !proc_m5_full_w2d &&
	     !WILL_FIRE_RL_proc_m8_pgmInitEnd &&
	     !WILL_FIRE_RL_proc_m8_pgmInit ;

  // rule RL_proc_m11_wbNm
  assign CAN_FIRE_RL_proc_m11_wbNm =
	     !proc_m11_stall && proc_m7_elt_e2w[179:175] != 5'd0 &&
	     proc_m7_elt_e2w_41_BIT_32_42_EQ_proc_m6_eEpoch_43___d544 &&
	     proc_m7_elt_e2w[181:180] == 2'h3 &&
	     proc_m7_full_e2w &&
	     !proc_m5_full_w2d ;
  assign WILL_FIRE_RL_proc_m11_wbNm =
	     CAN_FIRE_RL_proc_m11_wbNm && !WILL_FIRE_RL_proc_m9_decodeNm &&
	     !WILL_FIRE_RL_proc_m9_decodeLd ;

  // rule RL_proc_m11_wbNmZ
  assign CAN_FIRE_RL_proc_m11_wbNmZ =
	     !proc_m11_stall &&
	     proc_m7_elt_e2w_41_BIT_32_42_EQ_proc_m6_eEpoch_43___d544 &&
	     proc_m7_elt_e2w[181:180] == 2'h3 &&
	     proc_m7_elt_e2w[179:175] == 5'd0 &&
	     proc_m7_full_e2w &&
	     !proc_m5_full_w2d ;
  assign WILL_FIRE_RL_proc_m11_wbNmZ =
	     CAN_FIRE_RL_proc_m11_wbNmZ && !WILL_FIRE_RL_proc_m9_decodeNm &&
	     !WILL_FIRE_RL_proc_m9_decodeLd ;

  // inputs to muxes for submodule ports
  assign MUX_proc_m11_stall$write_1__SEL_2 =
	     WILL_FIRE_RL_proc_m11_reqSt || WILL_FIRE_RL_proc_m11_reqLd ;
  assign MUX_proc_m3_sbFlags$write_1__SEL_1 =
	     WILL_FIRE_RL_proc_m11_wrongEpoch &&
	     (proc_m7_elt_e2w[181:180] == 2'h0 ||
	      proc_m7_elt_e2w[181:180] == 2'h3) ;
  assign MUX_proc_m3_sbFlags$write_1__SEL_2 =
	     WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ;
  assign MUX_proc_m4_full_d2e$write_1__SEL_1 =
	     WILL_FIRE_RL_proc_m10_execBypass ||
	     WILL_FIRE_RL_proc_m10_execNm ;
  assign MUX_proc_m5_elt_w2d$write_1__PSEL_1 =
	     WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ||
	     WILL_FIRE_RL_proc_m11_reqLdZ ;
  assign MUX_proc_m5_elt_w2d$write_1__SEL_1 =
	     MUX_proc_m5_elt_w2d$write_1__PSEL_1 &&
	     NOT_IF_proc_m7_elt_e2w_41_BITS_53_TO_47_78_EQ__ETC___d726 ;
  assign MUX_proc_m5_elt_w2d$write_1__PSEL_2 =
	     WILL_FIRE_RL_proc_m11_repSt || WILL_FIRE_RL_proc_m11_repLd ;
  assign MUX_proc_m6_eEpoch$write_1__SEL_1 =
	     MUX_proc_m5_elt_w2d$write_1__PSEL_1 &&
	     NOT_IF_proc_m7_elt_e2w_41_BITS_53_TO_47_78_EQ__ETC___d726 ;
  assign MUX_proc_m7_full_e2w$write_1__SEL_1 =
	     WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ||
	     WILL_FIRE_RL_proc_m11_reqSt ||
	     WILL_FIRE_RL_proc_m11_reqLdZ ||
	     WILL_FIRE_RL_proc_m11_reqLd ||
	     WILL_FIRE_RL_proc_m11_wrongEpoch ;
  assign MUX_proc_m2_rf$write_1__VAL_1 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d815,
	       (proc_m11_stalled[147:143] == 5'd1) ?
		 rss$D_OUT :
		 proc_m2_rf[63:32],
	       (proc_m11_stalled[147:143] == 5'd0) ?
		 rss$D_OUT :
		 proc_m2_rf[31:0] } ;
  assign MUX_proc_m2_rf$write_1__VAL_2 =
	     { (proc_m7_elt_e2w[179:175] == 5'd31) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[1023:992],
	       (proc_m7_elt_e2w[179:175] == 5'd30) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[991:960],
	       (proc_m7_elt_e2w[179:175] == 5'd29) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[959:928],
	       (proc_m7_elt_e2w[179:175] == 5'd28) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[927:896],
	       (proc_m7_elt_e2w[179:175] == 5'd27) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[895:864],
	       (proc_m7_elt_e2w[179:175] == 5'd26) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[863:832],
	       (proc_m7_elt_e2w[179:175] == 5'd25) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[831:800],
	       (proc_m7_elt_e2w[179:175] == 5'd24) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[799:768],
	       (proc_m7_elt_e2w[179:175] == 5'd23) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[767:736],
	       (proc_m7_elt_e2w[179:175] == 5'd22) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[735:704],
	       (proc_m7_elt_e2w[179:175] == 5'd21) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[703:672],
	       (proc_m7_elt_e2w[179:175] == 5'd20) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[671:640],
	       (proc_m7_elt_e2w[179:175] == 5'd19) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[639:608],
	       (proc_m7_elt_e2w[179:175] == 5'd18) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[607:576],
	       (proc_m7_elt_e2w[179:175] == 5'd17) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[575:544],
	       (proc_m7_elt_e2w[179:175] == 5'd16) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[543:512],
	       (proc_m7_elt_e2w[179:175] == 5'd15) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[511:480],
	       (proc_m7_elt_e2w[179:175] == 5'd14) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[479:448],
	       (proc_m7_elt_e2w[179:175] == 5'd13) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[447:416],
	       (proc_m7_elt_e2w[179:175] == 5'd12) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[415:384],
	       (proc_m7_elt_e2w[179:175] == 5'd11) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[383:352],
	       (proc_m7_elt_e2w[179:175] == 5'd10) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[351:320],
	       (proc_m7_elt_e2w[179:175] == 5'd9) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[319:288],
	       (proc_m7_elt_e2w[179:175] == 5'd8) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[287:256],
	       (proc_m7_elt_e2w[179:175] == 5'd7) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[255:224],
	       (proc_m7_elt_e2w[179:175] == 5'd6) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[223:192],
	       (proc_m7_elt_e2w[179:175] == 5'd5) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[191:160],
	       (proc_m7_elt_e2w[179:175] == 5'd4) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[159:128],
	       (proc_m7_elt_e2w[179:175] == 5'd3) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[127:96],
	       (proc_m7_elt_e2w[179:175] == 5'd2) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[95:64],
	       (proc_m7_elt_e2w[179:175] == 5'd1) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[63:32],
	       proc_m2_rf[31:0] } ;
  assign MUX_proc_m3_sbFlags$write_1__VAL_1 =
	     { proc_m7_elt_e2w[179:175] != 5'd31 && proc_m3_sbFlags[31],
	       proc_m7_elt_e2w[179:175] != 5'd30 && proc_m3_sbFlags[30],
	       proc_m7_elt_e2w[179:175] != 5'd29 && proc_m3_sbFlags[29],
	       proc_m7_elt_e2w[179:175] != 5'd28 && proc_m3_sbFlags[28],
	       proc_m7_elt_e2w[179:175] != 5'd27 && proc_m3_sbFlags[27],
	       proc_m7_elt_e2w[179:175] != 5'd26 && proc_m3_sbFlags[26],
	       proc_m7_elt_e2w[179:175] != 5'd25 && proc_m3_sbFlags[25],
	       proc_m7_elt_e2w[179:175] != 5'd24 && proc_m3_sbFlags[24],
	       proc_m7_elt_e2w[179:175] != 5'd23 && proc_m3_sbFlags[23],
	       proc_m7_elt_e2w[179:175] != 5'd22 && proc_m3_sbFlags[22],
	       proc_m7_elt_e2w[179:175] != 5'd21 && proc_m3_sbFlags[21],
	       proc_m7_elt_e2w[179:175] != 5'd20 && proc_m3_sbFlags[20],
	       proc_m7_elt_e2w[179:175] != 5'd19 && proc_m3_sbFlags[19],
	       proc_m7_elt_e2w[179:175] != 5'd18 && proc_m3_sbFlags[18],
	       proc_m7_elt_e2w[179:175] != 5'd17 && proc_m3_sbFlags[17],
	       proc_m7_elt_e2w[179:175] != 5'd16 && proc_m3_sbFlags[16],
	       proc_m7_elt_e2w[179:175] != 5'd15 && proc_m3_sbFlags[15],
	       proc_m7_elt_e2w[179:175] != 5'd14 && proc_m3_sbFlags[14],
	       proc_m7_elt_e2w[179:175] != 5'd13 && proc_m3_sbFlags[13],
	       proc_m7_elt_e2w[179:175] != 5'd12 && proc_m3_sbFlags[12],
	       proc_m7_elt_e2w[179:175] != 5'd11 && proc_m3_sbFlags[11],
	       proc_m7_elt_e2w[179:175] != 5'd10 && proc_m3_sbFlags[10],
	       proc_m7_elt_e2w[179:175] != 5'd9 && proc_m3_sbFlags[9],
	       proc_m7_elt_e2w[179:175] != 5'd8 && proc_m3_sbFlags[8],
	       proc_m7_elt_e2w[179:175] != 5'd7 && proc_m3_sbFlags[7],
	       proc_m7_elt_e2w[179:175] != 5'd6 && proc_m3_sbFlags[6],
	       proc_m7_elt_e2w[179:175] != 5'd5 && proc_m3_sbFlags[5],
	       proc_m7_elt_e2w[179:175] != 5'd4 && proc_m3_sbFlags[4],
	       proc_m7_elt_e2w[179:175] != 5'd3 && proc_m3_sbFlags[3],
	       proc_m7_elt_e2w[179:175] != 5'd2 && proc_m3_sbFlags[2],
	       proc_m7_elt_e2w[179:175] != 5'd1 && proc_m3_sbFlags[1],
	       proc_m7_elt_e2w[179:175] != 5'd0 && proc_m3_sbFlags[0] } ;
  assign MUX_proc_m3_sbFlags$write_1__VAL_3 =
	     { proc_m1_elt_f2d[26:22] == 5'd31 || proc_m3_sbFlags[31],
	       proc_m1_elt_f2d[26:22] == 5'd30 || proc_m3_sbFlags[30],
	       proc_m1_elt_f2d[26:22] == 5'd29 || proc_m3_sbFlags[29],
	       proc_m1_elt_f2d[26:22] == 5'd28 || proc_m3_sbFlags[28],
	       proc_m1_elt_f2d[26:22] == 5'd27 || proc_m3_sbFlags[27],
	       proc_m1_elt_f2d[26:22] == 5'd26 || proc_m3_sbFlags[26],
	       proc_m1_elt_f2d[26:22] == 5'd25 || proc_m3_sbFlags[25],
	       proc_m1_elt_f2d[26:22] == 5'd24 || proc_m3_sbFlags[24],
	       proc_m1_elt_f2d[26:22] == 5'd23 || proc_m3_sbFlags[23],
	       proc_m1_elt_f2d[26:22] == 5'd22 || proc_m3_sbFlags[22],
	       proc_m1_elt_f2d[26:22] == 5'd21 || proc_m3_sbFlags[21],
	       proc_m1_elt_f2d[26:22] == 5'd20 || proc_m3_sbFlags[20],
	       proc_m1_elt_f2d[26:22] == 5'd19 || proc_m3_sbFlags[19],
	       proc_m1_elt_f2d[26:22] == 5'd18 || proc_m3_sbFlags[18],
	       proc_m1_elt_f2d[26:22] == 5'd17 || proc_m3_sbFlags[17],
	       proc_m1_elt_f2d[26:22] == 5'd16 || proc_m3_sbFlags[16],
	       proc_m1_elt_f2d[26:22] == 5'd15 || proc_m3_sbFlags[15],
	       proc_m1_elt_f2d[26:22] == 5'd14 || proc_m3_sbFlags[14],
	       proc_m1_elt_f2d[26:22] == 5'd13 || proc_m3_sbFlags[13],
	       proc_m1_elt_f2d[26:22] == 5'd12 || proc_m3_sbFlags[12],
	       proc_m1_elt_f2d[26:22] == 5'd11 || proc_m3_sbFlags[11],
	       proc_m1_elt_f2d[26:22] == 5'd10 || proc_m3_sbFlags[10],
	       proc_m1_elt_f2d[26:22] == 5'd9 || proc_m3_sbFlags[9],
	       proc_m1_elt_f2d[26:22] == 5'd8 || proc_m3_sbFlags[8],
	       proc_m1_elt_f2d[26:22] == 5'd7 || proc_m3_sbFlags[7],
	       proc_m1_elt_f2d[26:22] == 5'd6 || proc_m3_sbFlags[6],
	       proc_m1_elt_f2d[26:22] == 5'd5 || proc_m3_sbFlags[5],
	       proc_m1_elt_f2d[26:22] == 5'd4 || proc_m3_sbFlags[4],
	       proc_m1_elt_f2d[26:22] == 5'd3 || proc_m3_sbFlags[3],
	       proc_m1_elt_f2d[26:22] == 5'd2 || proc_m3_sbFlags[2],
	       proc_m1_elt_f2d[26:22] == 5'd1 || proc_m3_sbFlags[1],
	       proc_m1_elt_f2d[26:22] == 5'd0 || proc_m3_sbFlags[0] } ;
  assign MUX_proc_m3_sbFlags$write_1__VAL_4 =
	     { x_5__h46141 == 5'd31 || proc_m3_sbFlags[31],
	       x_5__h46141 == 5'd30 || proc_m3_sbFlags[30],
	       x_5__h46141 == 5'd29 || proc_m3_sbFlags[29],
	       x_5__h46141 == 5'd28 || proc_m3_sbFlags[28],
	       x_5__h46141 == 5'd27 || proc_m3_sbFlags[27],
	       x_5__h46141 == 5'd26 || proc_m3_sbFlags[26],
	       x_5__h46141 == 5'd25 || proc_m3_sbFlags[25],
	       x_5__h46141 == 5'd24 || proc_m3_sbFlags[24],
	       x_5__h46141 == 5'd23 || proc_m3_sbFlags[23],
	       x_5__h46141 == 5'd22 || proc_m3_sbFlags[22],
	       x_5__h46141 == 5'd21 || proc_m3_sbFlags[21],
	       x_5__h46141 == 5'd20 || proc_m3_sbFlags[20],
	       x_5__h46141 == 5'd19 || proc_m3_sbFlags[19],
	       x_5__h46141 == 5'd18 || proc_m3_sbFlags[18],
	       x_5__h46141 == 5'd17 || proc_m3_sbFlags[17],
	       x_5__h46141 == 5'd16 || proc_m3_sbFlags[16],
	       x_5__h46141 == 5'd15 || proc_m3_sbFlags[15],
	       x_5__h46141 == 5'd14 || proc_m3_sbFlags[14],
	       x_5__h46141 == 5'd13 || proc_m3_sbFlags[13],
	       x_5__h46141 == 5'd12 || proc_m3_sbFlags[12],
	       x_5__h46141 == 5'd11 || proc_m3_sbFlags[11],
	       x_5__h46141 == 5'd10 || proc_m3_sbFlags[10],
	       x_5__h46141 == 5'd9 || proc_m3_sbFlags[9],
	       x_5__h46141 == 5'd8 || proc_m3_sbFlags[8],
	       x_5__h46141 == 5'd7 || proc_m3_sbFlags[7],
	       x_5__h46141 == 5'd6 || proc_m3_sbFlags[6],
	       x_5__h46141 == 5'd5 || proc_m3_sbFlags[5],
	       x_5__h46141 == 5'd4 || proc_m3_sbFlags[4],
	       x_5__h46141 == 5'd3 || proc_m3_sbFlags[3],
	       x_5__h46141 == 5'd2 || proc_m3_sbFlags[2],
	       x_5__h46141 == 5'd1 || proc_m3_sbFlags[1],
	       x_5__h46141 == 5'd0 || proc_m3_sbFlags[0] } ;
  assign MUX_proc_m3_sbFlags$write_1__VAL_5 =
	     { proc_m11_stalled[147:143] != 5'd31 && proc_m3_sbFlags[31],
	       proc_m11_stalled[147:143] != 5'd30 && proc_m3_sbFlags[30],
	       proc_m11_stalled[147:143] != 5'd29 && proc_m3_sbFlags[29],
	       proc_m11_stalled[147:143] != 5'd28 && proc_m3_sbFlags[28],
	       proc_m11_stalled[147:143] != 5'd27 && proc_m3_sbFlags[27],
	       proc_m11_stalled[147:143] != 5'd26 && proc_m3_sbFlags[26],
	       proc_m11_stalled[147:143] != 5'd25 && proc_m3_sbFlags[25],
	       proc_m11_stalled[147:143] != 5'd24 && proc_m3_sbFlags[24],
	       proc_m11_stalled[147:143] != 5'd23 && proc_m3_sbFlags[23],
	       proc_m11_stalled[147:143] != 5'd22 && proc_m3_sbFlags[22],
	       proc_m11_stalled[147:143] != 5'd21 && proc_m3_sbFlags[21],
	       proc_m11_stalled[147:143] != 5'd20 && proc_m3_sbFlags[20],
	       proc_m11_stalled[147:143] != 5'd19 && proc_m3_sbFlags[19],
	       proc_m11_stalled[147:143] != 5'd18 && proc_m3_sbFlags[18],
	       proc_m11_stalled[147:143] != 5'd17 && proc_m3_sbFlags[17],
	       proc_m11_stalled[147:143] != 5'd16 && proc_m3_sbFlags[16],
	       proc_m11_stalled[147:143] != 5'd15 && proc_m3_sbFlags[15],
	       proc_m11_stalled[147:143] != 5'd14 && proc_m3_sbFlags[14],
	       proc_m11_stalled[147:143] != 5'd13 && proc_m3_sbFlags[13],
	       proc_m11_stalled[147:143] != 5'd12 && proc_m3_sbFlags[12],
	       proc_m11_stalled[147:143] != 5'd11 && proc_m3_sbFlags[11],
	       proc_m11_stalled[147:143] != 5'd10 && proc_m3_sbFlags[10],
	       proc_m11_stalled[147:143] != 5'd9 && proc_m3_sbFlags[9],
	       proc_m11_stalled[147:143] != 5'd8 && proc_m3_sbFlags[8],
	       proc_m11_stalled[147:143] != 5'd7 && proc_m3_sbFlags[7],
	       proc_m11_stalled[147:143] != 5'd6 && proc_m3_sbFlags[6],
	       proc_m11_stalled[147:143] != 5'd5 && proc_m3_sbFlags[5],
	       proc_m11_stalled[147:143] != 5'd4 && proc_m3_sbFlags[4],
	       proc_m11_stalled[147:143] != 5'd3 && proc_m3_sbFlags[3],
	       proc_m11_stalled[147:143] != 5'd2 && proc_m3_sbFlags[2],
	       proc_m11_stalled[147:143] != 5'd1 && proc_m3_sbFlags[1],
	       proc_m11_stalled[147:143] != 5'd0 && proc_m3_sbFlags[0] } ;
  assign MUX_proc_m4_elt_d2e$write_1__VAL_1 =
	     { x_4__h38686,
	       proc_m1_elt_f2d[26:22],
	       x__h40636,
	       64'd0,
	       proc_m1_elt_f2d } ;
  assign MUX_proc_m4_elt_d2e$write_1__VAL_2 =
	     { x_4__h38686,
	       5'h0,
	       x__h45784,
	       x__h45888,
	       32'h0,
	       proc_m1_elt_f2d } ;
  assign MUX_proc_m4_elt_d2e$write_1__VAL_3 =
	     { x_4__h38686,
	       x_5__h46141,
	       32'h0,
	       SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243,
	       x__h45888,
	       proc_m1_elt_f2d } ;
  assign MUX_proc_m7_elt_e2w$write_1__VAL_1 =
	     { proc_m4_elt_d2e, x_6__h49805 } ;
  assign MUX_proc_m7_elt_e2w$write_1__VAL_2 = { proc_m4_elt_d2e, 32'h0 } ;
  assign MUX_rqs$enq_1__VAL_1 = { x__h465, 33'd0 } ;
  assign MUX_rqs$enq_1__VAL_2 = { proc_m7_elt_e2w[174:143], 33'd0 } ;
  assign MUX_rqs$enq_1__VAL_3 =
	     { proc_m7_elt_e2w[174:143], 1'd1, proc_m7_elt_e2w[142:111] } ;

  // register pgmInitBase
  assign pgmInitBase$D_IN = 32'h0 ;
  assign pgmInitBase$EN = 1'b0 ;

  // register pgmInitOfs
  assign pgmInitOfs$D_IN = pgmInitOfs + 5'd1 ;
  assign pgmInitOfs$EN = WILL_FIRE_RL_pgmInitRq ;

  // register pgmInitOn
  assign pgmInitOn$D_IN = 1'd0 ;
  assign pgmInitOn$EN = WILL_FIRE_RL_pgmInitRq && ~pgmInitOfs == 5'd0 ;

  // register proc_m11_stall
  assign proc_m11_stall$D_IN = !MUX_proc_m5_elt_w2d$write_1__PSEL_2 ;
  assign proc_m11_stall$EN =
	     WILL_FIRE_RL_proc_m11_repSt || WILL_FIRE_RL_proc_m11_repLd ||
	     WILL_FIRE_RL_proc_m11_reqSt ||
	     WILL_FIRE_RL_proc_m11_reqLd ;

  // register proc_m11_stalled
  assign proc_m11_stalled$D_IN = proc_m7_elt_e2w[181:32] ;
  assign proc_m11_stalled$EN = MUX_proc_m11_stall$write_1__SEL_2 ;

  // register proc_m1_elt_f2d
  assign proc_m1_elt_f2d$D_IN =
	     { x_0_rawInst__h38418,
	       proc_m8_pc,
	       x_4__h38363,
	       proc_m8_fEpoch } ;
  assign proc_m1_elt_f2d$EN = WILL_FIRE_RL_proc_m8_instFetch ;

  // register proc_m1_full_f2d
  assign proc_m1_full_f2d$D_IN =
	     !WILL_FIRE_RL_proc_m9_decodeNm &&
	     !WILL_FIRE_RL_proc_m9_decodeSt &&
	     !WILL_FIRE_RL_proc_m9_decodeLd &&
	     !WILL_FIRE_RL_proc_m8_modifyPc ;
  assign proc_m1_full_f2d$EN =
	     WILL_FIRE_RL_proc_m9_decodeNm || WILL_FIRE_RL_proc_m9_decodeSt ||
	     WILL_FIRE_RL_proc_m9_decodeLd ||
	     WILL_FIRE_RL_proc_m8_modifyPc ||
	     WILL_FIRE_RL_proc_m8_instFetch ;

  // register proc_m2_rf
  assign proc_m2_rf$D_IN =
	     WILL_FIRE_RL_proc_m11_repLd ?
	       MUX_proc_m2_rf$write_1__VAL_1 :
	       MUX_proc_m2_rf$write_1__VAL_2 ;
  assign proc_m2_rf$EN =
	     WILL_FIRE_RL_proc_m11_repLd || WILL_FIRE_RL_proc_m11_wbNm ;

  // register proc_m3_sbFlags
  always@(MUX_proc_m3_sbFlags$write_1__SEL_1 or
	  MUX_proc_m3_sbFlags$write_1__VAL_1 or
	  MUX_proc_m3_sbFlags$write_1__SEL_2 or
	  WILL_FIRE_RL_proc_m9_decodeLd or
	  MUX_proc_m3_sbFlags$write_1__VAL_3 or
	  WILL_FIRE_RL_proc_m9_decodeNm or
	  MUX_proc_m3_sbFlags$write_1__VAL_4 or
	  WILL_FIRE_RL_proc_m11_repLd or MUX_proc_m3_sbFlags$write_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_proc_m3_sbFlags$write_1__SEL_1:
	  proc_m3_sbFlags$D_IN = MUX_proc_m3_sbFlags$write_1__VAL_1;
      MUX_proc_m3_sbFlags$write_1__SEL_2:
	  proc_m3_sbFlags$D_IN = MUX_proc_m3_sbFlags$write_1__VAL_1;
      WILL_FIRE_RL_proc_m9_decodeLd:
	  proc_m3_sbFlags$D_IN = MUX_proc_m3_sbFlags$write_1__VAL_3;
      WILL_FIRE_RL_proc_m9_decodeNm:
	  proc_m3_sbFlags$D_IN = MUX_proc_m3_sbFlags$write_1__VAL_4;
      WILL_FIRE_RL_proc_m11_repLd:
	  proc_m3_sbFlags$D_IN = MUX_proc_m3_sbFlags$write_1__VAL_5;
      default: proc_m3_sbFlags$D_IN = 32'hAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign proc_m3_sbFlags$EN =
	     WILL_FIRE_RL_proc_m11_wrongEpoch &&
	     (proc_m7_elt_e2w[181:180] == 2'h0 ||
	      proc_m7_elt_e2w[181:180] == 2'h3) ||
	     WILL_FIRE_RL_proc_m11_wbNmZ ||
	     WILL_FIRE_RL_proc_m11_wbNm ||
	     WILL_FIRE_RL_proc_m9_decodeLd ||
	     WILL_FIRE_RL_proc_m9_decodeNm ||
	     WILL_FIRE_RL_proc_m11_repLd ;

  // register proc_m4_elt_d2e
  always@(WILL_FIRE_RL_proc_m9_decodeLd or
	  MUX_proc_m4_elt_d2e$write_1__VAL_1 or
	  WILL_FIRE_RL_proc_m9_decodeSt or
	  MUX_proc_m4_elt_d2e$write_1__VAL_2 or
	  WILL_FIRE_RL_proc_m9_decodeNm or MUX_proc_m4_elt_d2e$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_proc_m9_decodeLd:
	  proc_m4_elt_d2e$D_IN = MUX_proc_m4_elt_d2e$write_1__VAL_1;
      WILL_FIRE_RL_proc_m9_decodeSt:
	  proc_m4_elt_d2e$D_IN = MUX_proc_m4_elt_d2e$write_1__VAL_2;
      WILL_FIRE_RL_proc_m9_decodeNm:
	  proc_m4_elt_d2e$D_IN = MUX_proc_m4_elt_d2e$write_1__VAL_3;
      default: proc_m4_elt_d2e$D_IN =
		   150'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign proc_m4_elt_d2e$EN =
	     WILL_FIRE_RL_proc_m9_decodeLd || WILL_FIRE_RL_proc_m9_decodeSt ||
	     WILL_FIRE_RL_proc_m9_decodeNm ;

  // register proc_m4_full_d2e
  assign proc_m4_full_d2e$D_IN = !MUX_proc_m4_full_d2e$write_1__SEL_1 ;
  assign proc_m4_full_d2e$EN =
	     WILL_FIRE_RL_proc_m10_execBypass ||
	     WILL_FIRE_RL_proc_m10_execNm ||
	     WILL_FIRE_RL_proc_m9_decodeNm ||
	     WILL_FIRE_RL_proc_m9_decodeSt ||
	     WILL_FIRE_RL_proc_m9_decodeLd ;

  // register proc_m5_elt_w2d
  assign proc_m5_elt_w2d$D_IN =
	     MUX_proc_m5_elt_w2d$write_1__SEL_1 ? x_9__h55389 : x_10__h64026 ;
  assign proc_m5_elt_w2d$EN =
	     (WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ||
	      WILL_FIRE_RL_proc_m11_reqLdZ) &&
	     NOT_IF_proc_m7_elt_e2w_41_BITS_53_TO_47_78_EQ__ETC___d726 ||
	     (WILL_FIRE_RL_proc_m11_repSt || WILL_FIRE_RL_proc_m11_repLd) &&
	     NOT_IF_proc_m11_stalled_34_BITS_21_TO_15_01_EQ_ETC___d949 ;

  // register proc_m5_full_w2d
  assign proc_m5_full_w2d$D_IN = !WILL_FIRE_RL_proc_m8_modifyPc ;
  assign proc_m5_full_w2d$EN =
	     (WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ||
	      WILL_FIRE_RL_proc_m11_reqLdZ) &&
	     NOT_IF_proc_m7_elt_e2w_41_BITS_53_TO_47_78_EQ__ETC___d726 ||
	     (WILL_FIRE_RL_proc_m11_repSt || WILL_FIRE_RL_proc_m11_repLd) &&
	     NOT_IF_proc_m11_stalled_34_BITS_21_TO_15_01_EQ_ETC___d949 ||
	     WILL_FIRE_RL_proc_m8_modifyPc ;

  // register proc_m6_eEpoch
  assign proc_m6_eEpoch$D_IN =
	     MUX_proc_m6_eEpoch$write_1__SEL_1 ?
	       !proc_m6_eEpoch :
	       !proc_m6_eEpoch ;
  assign proc_m6_eEpoch$EN =
	     (WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ||
	      WILL_FIRE_RL_proc_m11_reqLdZ) &&
	     NOT_IF_proc_m7_elt_e2w_41_BITS_53_TO_47_78_EQ__ETC___d726 ||
	     (WILL_FIRE_RL_proc_m11_repSt || WILL_FIRE_RL_proc_m11_repLd) &&
	     NOT_IF_proc_m11_stalled_34_BITS_21_TO_15_01_EQ_ETC___d949 ;

  // register proc_m7_elt_e2w
  assign proc_m7_elt_e2w$D_IN =
	     WILL_FIRE_RL_proc_m10_execNm ?
	       MUX_proc_m7_elt_e2w$write_1__VAL_1 :
	       MUX_proc_m7_elt_e2w$write_1__VAL_2 ;
  assign proc_m7_elt_e2w$EN =
	     WILL_FIRE_RL_proc_m10_execNm ||
	     WILL_FIRE_RL_proc_m10_execBypass ;

  // register proc_m7_full_e2w
  assign proc_m7_full_e2w$D_IN = !MUX_proc_m7_full_e2w$write_1__SEL_1 ;
  assign proc_m7_full_e2w$EN =
	     WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ||
	     WILL_FIRE_RL_proc_m11_reqSt ||
	     WILL_FIRE_RL_proc_m11_reqLdZ ||
	     WILL_FIRE_RL_proc_m11_reqLd ||
	     WILL_FIRE_RL_proc_m11_wrongEpoch ||
	     WILL_FIRE_RL_proc_m10_execBypass ||
	     WILL_FIRE_RL_proc_m10_execNm ;

  // register proc_m8_fEpoch
  assign proc_m8_fEpoch$D_IN = !proc_m8_fEpoch ;
  assign proc_m8_fEpoch$EN = WILL_FIRE_RL_proc_m8_modifyPc ;

  // register proc_m8_pc
  assign proc_m8_pc$D_IN =
	     WILL_FIRE_RL_proc_m8_modifyPc ? proc_m5_elt_w2d : x_4__h38363 ;
  assign proc_m8_pc$EN =
	     WILL_FIRE_RL_proc_m8_instFetch || WILL_FIRE_RL_proc_m8_modifyPc ;

  // register proc_m8_pgm
  assign proc_m8_pgm$D_IN =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d129,
	       (proc_m8_pinitOfs == 5'd1) ? rss$D_OUT : proc_m8_pgm[63:32],
	       (proc_m8_pinitOfs == 5'd0) ? rss$D_OUT : proc_m8_pgm[31:0] } ;
  assign proc_m8_pgm$EN =
	     WILL_FIRE_RL_proc_m8_pgmInitEnd || WILL_FIRE_RL_proc_m8_pgmInit ;

  // register proc_m8_pinit
  assign proc_m8_pinit$D_IN = 1'd1 ;
  assign proc_m8_pinit$EN = WILL_FIRE_RL_proc_m8_pgmInitEnd ;

  // register proc_m8_pinitOfs
  assign proc_m8_pinitOfs$D_IN = proc_m8_pinitOfs + 5'h01 ;
  assign proc_m8_pinitOfs$EN = WILL_FIRE_RL_proc_m8_pgmInit ;

  // submodule rqs
  always@(WILL_FIRE_RL_pgmInitRq or
	  MUX_rqs$enq_1__VAL_1 or
	  WILL_FIRE_RL_proc_m11_reqLd or
	  MUX_rqs$enq_1__VAL_2 or
	  WILL_FIRE_RL_proc_m11_reqSt or MUX_rqs$enq_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_pgmInitRq: rqs$D_IN = MUX_rqs$enq_1__VAL_1;
      WILL_FIRE_RL_proc_m11_reqLd: rqs$D_IN = MUX_rqs$enq_1__VAL_2;
      WILL_FIRE_RL_proc_m11_reqSt: rqs$D_IN = MUX_rqs$enq_1__VAL_3;
      default: rqs$D_IN = 65'h0AAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign rqs$ENQ =
	     WILL_FIRE_RL_pgmInitRq || WILL_FIRE_RL_proc_m11_reqLd ||
	     WILL_FIRE_RL_proc_m11_reqSt ;
  assign rqs$DEQ = EN_obtain_rq_get ;
  assign rqs$CLR = 1'b0 ;

  // submodule rss
  assign rss$D_IN = send_rs_put ;
  assign rss$ENQ = EN_send_rs_put ;
  assign rss$DEQ =
	     WILL_FIRE_RL_proc_m11_repSt || WILL_FIRE_RL_proc_m11_repLd ||
	     WILL_FIRE_RL_proc_m8_pgmInitEnd ||
	     WILL_FIRE_RL_proc_m8_pgmInit ;
  assign rss$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d707 =
	     x5606_MINUS_y5768__q5[31] ?
	       proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_proc__ETC___d699 :
	       proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_0x4___d700 ;
  assign IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d709 =
	     x5606_MINUS_y5768__q5[31] ?
	       proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_0x4___d700 :
	       proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_proc__ETC___d699 ;
  assign IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d930 =
	     x4251_MINUS_y4413__q6[31] ?
	       proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_proc__ETC___d922 :
	       proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_0x4___d923 ;
  assign IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d932 =
	     x4251_MINUS_y4413__q6[31] ?
	       proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_0x4___d923 :
	       proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_proc__ETC___d922 ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d750 =
	     { (proc_m11_stalled[147:143] == 5'd31) ?
		 rss$D_OUT :
		 proc_m2_rf[1023:992],
	       (proc_m11_stalled[147:143] == 5'd30) ?
		 rss$D_OUT :
		 proc_m2_rf[991:960],
	       (proc_m11_stalled[147:143] == 5'd29) ?
		 rss$D_OUT :
		 proc_m2_rf[959:928],
	       (proc_m11_stalled[147:143] == 5'd28) ?
		 rss$D_OUT :
		 proc_m2_rf[927:896] } ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d755 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d750,
	       (proc_m11_stalled[147:143] == 5'd27) ?
		 rss$D_OUT :
		 proc_m2_rf[895:864],
	       (proc_m11_stalled[147:143] == 5'd26) ?
		 rss$D_OUT :
		 proc_m2_rf[863:832] } ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d760 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d755,
	       (proc_m11_stalled[147:143] == 5'd25) ?
		 rss$D_OUT :
		 proc_m2_rf[831:800],
	       (proc_m11_stalled[147:143] == 5'd24) ?
		 rss$D_OUT :
		 proc_m2_rf[799:768] } ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d765 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d760,
	       (proc_m11_stalled[147:143] == 5'd23) ?
		 rss$D_OUT :
		 proc_m2_rf[767:736],
	       (proc_m11_stalled[147:143] == 5'd22) ?
		 rss$D_OUT :
		 proc_m2_rf[735:704] } ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d770 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d765,
	       (proc_m11_stalled[147:143] == 5'd21) ?
		 rss$D_OUT :
		 proc_m2_rf[703:672],
	       (proc_m11_stalled[147:143] == 5'd20) ?
		 rss$D_OUT :
		 proc_m2_rf[671:640] } ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d775 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d770,
	       (proc_m11_stalled[147:143] == 5'd19) ?
		 rss$D_OUT :
		 proc_m2_rf[639:608],
	       (proc_m11_stalled[147:143] == 5'd18) ?
		 rss$D_OUT :
		 proc_m2_rf[607:576] } ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d780 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d775,
	       (proc_m11_stalled[147:143] == 5'd17) ?
		 rss$D_OUT :
		 proc_m2_rf[575:544],
	       (proc_m11_stalled[147:143] == 5'd16) ?
		 rss$D_OUT :
		 proc_m2_rf[543:512] } ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d785 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d780,
	       (proc_m11_stalled[147:143] == 5'd15) ?
		 rss$D_OUT :
		 proc_m2_rf[511:480],
	       (proc_m11_stalled[147:143] == 5'd14) ?
		 rss$D_OUT :
		 proc_m2_rf[479:448] } ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d790 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d785,
	       (proc_m11_stalled[147:143] == 5'd13) ?
		 rss$D_OUT :
		 proc_m2_rf[447:416],
	       (proc_m11_stalled[147:143] == 5'd12) ?
		 rss$D_OUT :
		 proc_m2_rf[415:384] } ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d795 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d790,
	       (proc_m11_stalled[147:143] == 5'd11) ?
		 rss$D_OUT :
		 proc_m2_rf[383:352],
	       (proc_m11_stalled[147:143] == 5'd10) ?
		 rss$D_OUT :
		 proc_m2_rf[351:320] } ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d800 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d795,
	       (proc_m11_stalled[147:143] == 5'd9) ?
		 rss$D_OUT :
		 proc_m2_rf[319:288],
	       (proc_m11_stalled[147:143] == 5'd8) ?
		 rss$D_OUT :
		 proc_m2_rf[287:256] } ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d805 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d800,
	       (proc_m11_stalled[147:143] == 5'd7) ?
		 rss$D_OUT :
		 proc_m2_rf[255:224],
	       (proc_m11_stalled[147:143] == 5'd6) ?
		 rss$D_OUT :
		 proc_m2_rf[223:192] } ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d810 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d805,
	       (proc_m11_stalled[147:143] == 5'd5) ?
		 rss$D_OUT :
		 proc_m2_rf[191:160],
	       (proc_m11_stalled[147:143] == 5'd4) ?
		 rss$D_OUT :
		 proc_m2_rf[159:128] } ;
  assign IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d815 =
	     { IF_proc_m11_stalled_34_BITS_147_TO_143_40_EQ_3_ETC___d810,
	       (proc_m11_stalled[147:143] == 5'd3) ?
		 rss$D_OUT :
		 proc_m2_rf[127:96],
	       (proc_m11_stalled[147:143] == 5'd2) ?
		 rss$D_OUT :
		 proc_m2_rf[95:64] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d101 =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d94,
	       (proc_m8_pinitOfs == 5'd11) ? rss$D_OUT : proc_m8_pgm[383:352],
	       (proc_m8_pinitOfs == 5'd10) ?
		 rss$D_OUT :
		 proc_m8_pgm[351:320] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d108 =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d101,
	       (proc_m8_pinitOfs == 5'd9) ? rss$D_OUT : proc_m8_pgm[319:288],
	       (proc_m8_pinitOfs == 5'd8) ?
		 rss$D_OUT :
		 proc_m8_pgm[287:256] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d115 =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d108,
	       (proc_m8_pinitOfs == 5'd7) ? rss$D_OUT : proc_m8_pgm[255:224],
	       (proc_m8_pinitOfs == 5'd6) ?
		 rss$D_OUT :
		 proc_m8_pgm[223:192] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d122 =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d115,
	       (proc_m8_pinitOfs == 5'd5) ? rss$D_OUT : proc_m8_pgm[191:160],
	       (proc_m8_pinitOfs == 5'd4) ?
		 rss$D_OUT :
		 proc_m8_pgm[159:128] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d129 =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d122,
	       (proc_m8_pinitOfs == 5'd3) ? rss$D_OUT : proc_m8_pgm[127:96],
	       (proc_m8_pinitOfs == 5'd2) ? rss$D_OUT : proc_m8_pgm[95:64] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d38 =
	     { (proc_m8_pinitOfs == 5'd31) ?
		 rss$D_OUT :
		 proc_m8_pgm[1023:992],
	       (proc_m8_pinitOfs == 5'd30) ? rss$D_OUT : proc_m8_pgm[991:960],
	       (proc_m8_pinitOfs == 5'd29) ? rss$D_OUT : proc_m8_pgm[959:928],
	       (proc_m8_pinitOfs == 5'd28) ?
		 rss$D_OUT :
		 proc_m8_pgm[927:896] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d45 =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d38,
	       (proc_m8_pinitOfs == 5'd27) ? rss$D_OUT : proc_m8_pgm[895:864],
	       (proc_m8_pinitOfs == 5'd26) ?
		 rss$D_OUT :
		 proc_m8_pgm[863:832] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d52 =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d45,
	       (proc_m8_pinitOfs == 5'd25) ? rss$D_OUT : proc_m8_pgm[831:800],
	       (proc_m8_pinitOfs == 5'd24) ?
		 rss$D_OUT :
		 proc_m8_pgm[799:768] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d59 =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d52,
	       (proc_m8_pinitOfs == 5'd23) ? rss$D_OUT : proc_m8_pgm[767:736],
	       (proc_m8_pinitOfs == 5'd22) ?
		 rss$D_OUT :
		 proc_m8_pgm[735:704] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d66 =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d59,
	       (proc_m8_pinitOfs == 5'd21) ? rss$D_OUT : proc_m8_pgm[703:672],
	       (proc_m8_pinitOfs == 5'd20) ?
		 rss$D_OUT :
		 proc_m8_pgm[671:640] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d73 =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d66,
	       (proc_m8_pinitOfs == 5'd19) ? rss$D_OUT : proc_m8_pgm[639:608],
	       (proc_m8_pinitOfs == 5'd18) ?
		 rss$D_OUT :
		 proc_m8_pgm[607:576] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d80 =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d73,
	       (proc_m8_pinitOfs == 5'd17) ? rss$D_OUT : proc_m8_pgm[575:544],
	       (proc_m8_pinitOfs == 5'd16) ?
		 rss$D_OUT :
		 proc_m8_pgm[543:512] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d87 =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d80,
	       (proc_m8_pinitOfs == 5'd15) ? rss$D_OUT : proc_m8_pgm[511:480],
	       (proc_m8_pinitOfs == 5'd14) ?
		 rss$D_OUT :
		 proc_m8_pgm[479:448] } ;
  assign IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d94 =
	     { IF_proc_m8_pinitOfs_6_EQ_31_3_THEN_rss_first___ETC___d87,
	       (proc_m8_pinitOfs == 5'd13) ? rss$D_OUT : proc_m8_pgm[447:416],
	       (proc_m8_pinitOfs == 5'd12) ?
		 rss$D_OUT :
		 proc_m8_pgm[415:384] } ;
  assign NOT_IF_proc_m11_stalled_34_BITS_21_TO_15_01_EQ_ETC___d949 =
	     x_10__h64026 != proc_m11_stalled[7:1] ;
  assign NOT_IF_proc_m7_elt_e2w_41_BITS_53_TO_47_78_EQ__ETC___d726 =
	     x_9__h55389 != proc_m7_elt_e2w[39:33] ;
  assign NOT_SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m_ETC___d354 =
	     !SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 &&
	     !SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 &&
	     !CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 &&
	     proc_m1_elt_f2d[21:15] != 7'h03 &&
	     proc_m1_elt_f2d[21:15] != 7'h23 &&
	     proc_m1_full_f2d ;
  assign NOT_proc_m4_full_d2e_56_57_AND_NOT_SEL_ARR_pro_ETC___d204 =
	     !proc_m4_full_d2e &&
	     !SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 &&
	     !CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 &&
	     proc_m1_elt_f2d[21:15] == 7'h03 &&
	     proc_m1_full_f2d ;
  assign NOT_proc_m4_full_d2e_56_57_AND_NOT_SEL_ARR_pro_ETC___d335 =
	     !proc_m4_full_d2e &&
	     !SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 &&
	     !SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 &&
	     proc_m1_elt_f2d[21:15] == 7'h23 &&
	     proc_m1_full_f2d ;
  assign SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d695 =
	     x__h55606 == y__h55768 ;
  assign SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d711 =
	     x__h55606 < y__h55768 ;
  assign SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d918 =
	     x__h64251 == y__h64413 ;
  assign SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d934 =
	     x__h64251 < y__h64413 ;
  assign _0_CONCAT_proc_m4_elt_d2e_42_BITS_110_TO_79_63__ETC___d523 =
	     { 32'd0, proc_m4_elt_d2e[110:79] } *
	     { 32'd0, proc_m4_elt_d2e[78:47] } ;
  assign proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_0x4___d923 =
	     proc_m11_stalled[14:8] + 7'h04 ;
  assign proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_proc__ETC___d922 =
	     proc_m11_stalled[14:8] + y__h64537 ;
  assign proc_m1_elt_f2d_BITS_46_TO_35__q2 = proc_m1_elt_f2d[46:35] ;
  assign proc_m4_elt_d2e_42_BITS_110_TO_79_63_MINUS_pro_ETC___d500 =
	     proc_m4_elt_d2e[110:79] - proc_m4_elt_d2e[78:47] ;
  assign proc_m4_elt_d2e_42_BITS_110_TO_79_63_SRL_proc__ETC___d506 =
	     proc_m4_elt_d2e[110:79] >> proc_m4_elt_d2e[51:47] ;
  assign proc_m4_elt_d2e_BITS_46_TO_35__q1 = proc_m4_elt_d2e[46:35] ;
  assign proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_0x4___d700 =
	     proc_m7_elt_e2w[46:40] + 7'h04 ;
  assign proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_proc__ETC___d699 =
	     proc_m7_elt_e2w[46:40] + y__h55892 ;
  assign proc_m7_elt_e2w_41_BIT_32_42_EQ_proc_m6_eEpoch_43___d544 =
	     proc_m7_elt_e2w[32] == proc_m6_eEpoch ;
  assign x4251_MINUS_y4413__q6 = x__h64251 - y__h64413 ;
  assign x5606_MINUS_y5768__q5 = x__h55606 - y__h55768 ;
  assign x_4__h38363 = proc_m8_pc + 7'h04 ;
  assign x_5__h46141 =
	     (proc_m1_elt_f2d[21:15] == 7'h63) ?
	       5'h0 :
	       proc_m1_elt_f2d[26:22] ;
  assign x__h35082 = ~proc_m8_pinitOfs ;
  assign x__h40636 =
	     SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 +
	     { {20{proc_m1_elt_f2d_BITS_46_TO_35__q2[11]}},
	       proc_m1_elt_f2d_BITS_46_TO_35__q2 } ;
  assign x__h45784 =
	     SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 +
	     { {20{x__h45834[11]}}, x__h45834 } ;
  assign x__h45834 = { proc_m1_elt_f2d[46:40], proc_m1_elt_f2d[26:22] } ;
  assign x__h465 = pgmInitBase + { 27'd0, x__h472 } ;
  assign x__h472 = { pgmInitOfs[2:0], 2'd0 } ;
  assign x__h50006 = { 25'd0, proc_m4_elt_d2e[14:8] } ;
  assign x__h50069 = proc_m4_elt_d2e[14:8] + 7'h04 ;
  assign y__h50177 =
	     { {20{proc_m4_elt_d2e_BITS_46_TO_35__q1[11]}},
	       proc_m4_elt_d2e_BITS_46_TO_35__q1 } ;
  assign y__h50306 = { 20'd0, proc_m4_elt_d2e[46:35] } ;
  assign y__h55450 = { proc_m7_elt_e2w[73:68], 1'd0 } ;
  assign y__h55892 =
	     { proc_m7_elt_e2w[73:72], proc_m7_elt_e2w[58:55], 1'd0 } ;
  assign y__h64093 = { proc_m11_stalled[41:36], 1'd0 } ;
  assign y__h64537 =
	     { proc_m11_stalled[41:40], proc_m11_stalled[26:23], 1'd0 } ;
  always@(proc_m8_pc or proc_m8_pgm)
  begin
    case (proc_m8_pc[6:2])
      5'd0: x_0_rawInst__h38418 = proc_m8_pgm[31:0];
      5'd1: x_0_rawInst__h38418 = proc_m8_pgm[63:32];
      5'd2: x_0_rawInst__h38418 = proc_m8_pgm[95:64];
      5'd3: x_0_rawInst__h38418 = proc_m8_pgm[127:96];
      5'd4: x_0_rawInst__h38418 = proc_m8_pgm[159:128];
      5'd5: x_0_rawInst__h38418 = proc_m8_pgm[191:160];
      5'd6: x_0_rawInst__h38418 = proc_m8_pgm[223:192];
      5'd7: x_0_rawInst__h38418 = proc_m8_pgm[255:224];
      5'd8: x_0_rawInst__h38418 = proc_m8_pgm[287:256];
      5'd9: x_0_rawInst__h38418 = proc_m8_pgm[319:288];
      5'd10: x_0_rawInst__h38418 = proc_m8_pgm[351:320];
      5'd11: x_0_rawInst__h38418 = proc_m8_pgm[383:352];
      5'd12: x_0_rawInst__h38418 = proc_m8_pgm[415:384];
      5'd13: x_0_rawInst__h38418 = proc_m8_pgm[447:416];
      5'd14: x_0_rawInst__h38418 = proc_m8_pgm[479:448];
      5'd15: x_0_rawInst__h38418 = proc_m8_pgm[511:480];
      5'd16: x_0_rawInst__h38418 = proc_m8_pgm[543:512];
      5'd17: x_0_rawInst__h38418 = proc_m8_pgm[575:544];
      5'd18: x_0_rawInst__h38418 = proc_m8_pgm[607:576];
      5'd19: x_0_rawInst__h38418 = proc_m8_pgm[639:608];
      5'd20: x_0_rawInst__h38418 = proc_m8_pgm[671:640];
      5'd21: x_0_rawInst__h38418 = proc_m8_pgm[703:672];
      5'd22: x_0_rawInst__h38418 = proc_m8_pgm[735:704];
      5'd23: x_0_rawInst__h38418 = proc_m8_pgm[767:736];
      5'd24: x_0_rawInst__h38418 = proc_m8_pgm[799:768];
      5'd25: x_0_rawInst__h38418 = proc_m8_pgm[831:800];
      5'd26: x_0_rawInst__h38418 = proc_m8_pgm[863:832];
      5'd27: x_0_rawInst__h38418 = proc_m8_pgm[895:864];
      5'd28: x_0_rawInst__h38418 = proc_m8_pgm[927:896];
      5'd29: x_0_rawInst__h38418 = proc_m8_pgm[959:928];
      5'd30: x_0_rawInst__h38418 = proc_m8_pgm[991:960];
      5'd31: x_0_rawInst__h38418 = proc_m8_pgm[1023:992];
    endcase
  end
  always@(proc_m1_elt_f2d)
  begin
    case (proc_m1_elt_f2d[21:15])
      7'h03: x_4__h38686 = 2'h0;
      7'h23: x_4__h38686 = 2'h1;
      default: x_4__h38686 = 2'h3;
    endcase
  end
  always@(proc_m1_elt_f2d or proc_m2_rf)
  begin
    case (proc_m1_elt_f2d[39:35])
      5'd0: x__h45888 = proc_m2_rf[31:0];
      5'd1: x__h45888 = proc_m2_rf[63:32];
      5'd2: x__h45888 = proc_m2_rf[95:64];
      5'd3: x__h45888 = proc_m2_rf[127:96];
      5'd4: x__h45888 = proc_m2_rf[159:128];
      5'd5: x__h45888 = proc_m2_rf[191:160];
      5'd6: x__h45888 = proc_m2_rf[223:192];
      5'd7: x__h45888 = proc_m2_rf[255:224];
      5'd8: x__h45888 = proc_m2_rf[287:256];
      5'd9: x__h45888 = proc_m2_rf[319:288];
      5'd10: x__h45888 = proc_m2_rf[351:320];
      5'd11: x__h45888 = proc_m2_rf[383:352];
      5'd12: x__h45888 = proc_m2_rf[415:384];
      5'd13: x__h45888 = proc_m2_rf[447:416];
      5'd14: x__h45888 = proc_m2_rf[479:448];
      5'd15: x__h45888 = proc_m2_rf[511:480];
      5'd16: x__h45888 = proc_m2_rf[543:512];
      5'd17: x__h45888 = proc_m2_rf[575:544];
      5'd18: x__h45888 = proc_m2_rf[607:576];
      5'd19: x__h45888 = proc_m2_rf[639:608];
      5'd20: x__h45888 = proc_m2_rf[671:640];
      5'd21: x__h45888 = proc_m2_rf[703:672];
      5'd22: x__h45888 = proc_m2_rf[735:704];
      5'd23: x__h45888 = proc_m2_rf[767:736];
      5'd24: x__h45888 = proc_m2_rf[799:768];
      5'd25: x__h45888 = proc_m2_rf[831:800];
      5'd26: x__h45888 = proc_m2_rf[863:832];
      5'd27: x__h45888 = proc_m2_rf[895:864];
      5'd28: x__h45888 = proc_m2_rf[927:896];
      5'd29: x__h45888 = proc_m2_rf[959:928];
      5'd30: x__h45888 = proc_m2_rf[991:960];
      5'd31: x__h45888 = proc_m2_rf[1023:992];
    endcase
  end
  always@(proc_m7_elt_e2w or proc_m2_rf)
  begin
    case (proc_m7_elt_e2w[66:62])
      5'd0: x__h55606 = proc_m2_rf[31:0];
      5'd1: x__h55606 = proc_m2_rf[63:32];
      5'd2: x__h55606 = proc_m2_rf[95:64];
      5'd3: x__h55606 = proc_m2_rf[127:96];
      5'd4: x__h55606 = proc_m2_rf[159:128];
      5'd5: x__h55606 = proc_m2_rf[191:160];
      5'd6: x__h55606 = proc_m2_rf[223:192];
      5'd7: x__h55606 = proc_m2_rf[255:224];
      5'd8: x__h55606 = proc_m2_rf[287:256];
      5'd9: x__h55606 = proc_m2_rf[319:288];
      5'd10: x__h55606 = proc_m2_rf[351:320];
      5'd11: x__h55606 = proc_m2_rf[383:352];
      5'd12: x__h55606 = proc_m2_rf[415:384];
      5'd13: x__h55606 = proc_m2_rf[447:416];
      5'd14: x__h55606 = proc_m2_rf[479:448];
      5'd15: x__h55606 = proc_m2_rf[511:480];
      5'd16: x__h55606 = proc_m2_rf[543:512];
      5'd17: x__h55606 = proc_m2_rf[575:544];
      5'd18: x__h55606 = proc_m2_rf[607:576];
      5'd19: x__h55606 = proc_m2_rf[639:608];
      5'd20: x__h55606 = proc_m2_rf[671:640];
      5'd21: x__h55606 = proc_m2_rf[703:672];
      5'd22: x__h55606 = proc_m2_rf[735:704];
      5'd23: x__h55606 = proc_m2_rf[767:736];
      5'd24: x__h55606 = proc_m2_rf[799:768];
      5'd25: x__h55606 = proc_m2_rf[831:800];
      5'd26: x__h55606 = proc_m2_rf[863:832];
      5'd27: x__h55606 = proc_m2_rf[895:864];
      5'd28: x__h55606 = proc_m2_rf[927:896];
      5'd29: x__h55606 = proc_m2_rf[959:928];
      5'd30: x__h55606 = proc_m2_rf[991:960];
      5'd31: x__h55606 = proc_m2_rf[1023:992];
    endcase
  end
  always@(proc_m7_elt_e2w or proc_m2_rf)
  begin
    case (proc_m7_elt_e2w[71:67])
      5'd0: y__h55768 = proc_m2_rf[31:0];
      5'd1: y__h55768 = proc_m2_rf[63:32];
      5'd2: y__h55768 = proc_m2_rf[95:64];
      5'd3: y__h55768 = proc_m2_rf[127:96];
      5'd4: y__h55768 = proc_m2_rf[159:128];
      5'd5: y__h55768 = proc_m2_rf[191:160];
      5'd6: y__h55768 = proc_m2_rf[223:192];
      5'd7: y__h55768 = proc_m2_rf[255:224];
      5'd8: y__h55768 = proc_m2_rf[287:256];
      5'd9: y__h55768 = proc_m2_rf[319:288];
      5'd10: y__h55768 = proc_m2_rf[351:320];
      5'd11: y__h55768 = proc_m2_rf[383:352];
      5'd12: y__h55768 = proc_m2_rf[415:384];
      5'd13: y__h55768 = proc_m2_rf[447:416];
      5'd14: y__h55768 = proc_m2_rf[479:448];
      5'd15: y__h55768 = proc_m2_rf[511:480];
      5'd16: y__h55768 = proc_m2_rf[543:512];
      5'd17: y__h55768 = proc_m2_rf[575:544];
      5'd18: y__h55768 = proc_m2_rf[607:576];
      5'd19: y__h55768 = proc_m2_rf[639:608];
      5'd20: y__h55768 = proc_m2_rf[671:640];
      5'd21: y__h55768 = proc_m2_rf[703:672];
      5'd22: y__h55768 = proc_m2_rf[735:704];
      5'd23: y__h55768 = proc_m2_rf[767:736];
      5'd24: y__h55768 = proc_m2_rf[799:768];
      5'd25: y__h55768 = proc_m2_rf[831:800];
      5'd26: y__h55768 = proc_m2_rf[863:832];
      5'd27: y__h55768 = proc_m2_rf[895:864];
      5'd28: y__h55768 = proc_m2_rf[927:896];
      5'd29: y__h55768 = proc_m2_rf[959:928];
      5'd30: y__h55768 = proc_m2_rf[991:960];
      5'd31: y__h55768 = proc_m2_rf[1023:992];
    endcase
  end
  always@(proc_m11_stalled or proc_m2_rf)
  begin
    case (proc_m11_stalled[34:30])
      5'd0: x__h64251 = proc_m2_rf[31:0];
      5'd1: x__h64251 = proc_m2_rf[63:32];
      5'd2: x__h64251 = proc_m2_rf[95:64];
      5'd3: x__h64251 = proc_m2_rf[127:96];
      5'd4: x__h64251 = proc_m2_rf[159:128];
      5'd5: x__h64251 = proc_m2_rf[191:160];
      5'd6: x__h64251 = proc_m2_rf[223:192];
      5'd7: x__h64251 = proc_m2_rf[255:224];
      5'd8: x__h64251 = proc_m2_rf[287:256];
      5'd9: x__h64251 = proc_m2_rf[319:288];
      5'd10: x__h64251 = proc_m2_rf[351:320];
      5'd11: x__h64251 = proc_m2_rf[383:352];
      5'd12: x__h64251 = proc_m2_rf[415:384];
      5'd13: x__h64251 = proc_m2_rf[447:416];
      5'd14: x__h64251 = proc_m2_rf[479:448];
      5'd15: x__h64251 = proc_m2_rf[511:480];
      5'd16: x__h64251 = proc_m2_rf[543:512];
      5'd17: x__h64251 = proc_m2_rf[575:544];
      5'd18: x__h64251 = proc_m2_rf[607:576];
      5'd19: x__h64251 = proc_m2_rf[639:608];
      5'd20: x__h64251 = proc_m2_rf[671:640];
      5'd21: x__h64251 = proc_m2_rf[703:672];
      5'd22: x__h64251 = proc_m2_rf[735:704];
      5'd23: x__h64251 = proc_m2_rf[767:736];
      5'd24: x__h64251 = proc_m2_rf[799:768];
      5'd25: x__h64251 = proc_m2_rf[831:800];
      5'd26: x__h64251 = proc_m2_rf[863:832];
      5'd27: x__h64251 = proc_m2_rf[895:864];
      5'd28: x__h64251 = proc_m2_rf[927:896];
      5'd29: x__h64251 = proc_m2_rf[959:928];
      5'd30: x__h64251 = proc_m2_rf[991:960];
      5'd31: x__h64251 = proc_m2_rf[1023:992];
    endcase
  end
  always@(proc_m11_stalled or proc_m2_rf)
  begin
    case (proc_m11_stalled[39:35])
      5'd0: y__h64413 = proc_m2_rf[31:0];
      5'd1: y__h64413 = proc_m2_rf[63:32];
      5'd2: y__h64413 = proc_m2_rf[95:64];
      5'd3: y__h64413 = proc_m2_rf[127:96];
      5'd4: y__h64413 = proc_m2_rf[159:128];
      5'd5: y__h64413 = proc_m2_rf[191:160];
      5'd6: y__h64413 = proc_m2_rf[223:192];
      5'd7: y__h64413 = proc_m2_rf[255:224];
      5'd8: y__h64413 = proc_m2_rf[287:256];
      5'd9: y__h64413 = proc_m2_rf[319:288];
      5'd10: y__h64413 = proc_m2_rf[351:320];
      5'd11: y__h64413 = proc_m2_rf[383:352];
      5'd12: y__h64413 = proc_m2_rf[415:384];
      5'd13: y__h64413 = proc_m2_rf[447:416];
      5'd14: y__h64413 = proc_m2_rf[479:448];
      5'd15: y__h64413 = proc_m2_rf[511:480];
      5'd16: y__h64413 = proc_m2_rf[543:512];
      5'd17: y__h64413 = proc_m2_rf[575:544];
      5'd18: y__h64413 = proc_m2_rf[607:576];
      5'd19: y__h64413 = proc_m2_rf[639:608];
      5'd20: y__h64413 = proc_m2_rf[671:640];
      5'd21: y__h64413 = proc_m2_rf[703:672];
      5'd22: y__h64413 = proc_m2_rf[735:704];
      5'd23: y__h64413 = proc_m2_rf[767:736];
      5'd24: y__h64413 = proc_m2_rf[799:768];
      5'd25: y__h64413 = proc_m2_rf[831:800];
      5'd26: y__h64413 = proc_m2_rf[863:832];
      5'd27: y__h64413 = proc_m2_rf[895:864];
      5'd28: y__h64413 = proc_m2_rf[927:896];
      5'd29: y__h64413 = proc_m2_rf[959:928];
      5'd30: y__h64413 = proc_m2_rf[991:960];
      5'd31: y__h64413 = proc_m2_rf[1023:992];
    endcase
  end
  always@(proc_m1_elt_f2d or proc_m2_rf)
  begin
    case (proc_m1_elt_f2d[34:30])
      5'd0:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[31:0];
      5'd1:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[63:32];
      5'd2:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[95:64];
      5'd3:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[127:96];
      5'd4:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[159:128];
      5'd5:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[191:160];
      5'd6:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[223:192];
      5'd7:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[255:224];
      5'd8:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[287:256];
      5'd9:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[319:288];
      5'd10:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[351:320];
      5'd11:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[383:352];
      5'd12:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[415:384];
      5'd13:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[447:416];
      5'd14:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[479:448];
      5'd15:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[511:480];
      5'd16:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[543:512];
      5'd17:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[575:544];
      5'd18:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[607:576];
      5'd19:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[639:608];
      5'd20:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[671:640];
      5'd21:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[703:672];
      5'd22:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[735:704];
      5'd23:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[767:736];
      5'd24:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[799:768];
      5'd25:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[831:800];
      5'd26:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[863:832];
      5'd27:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[895:864];
      5'd28:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[927:896];
      5'd29:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[959:928];
      5'd30:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[991:960];
      5'd31:
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d243 =
	      proc_m2_rf[1023:992];
    endcase
  end
  always@(proc_m1_elt_f2d or proc_m3_sbFlags)
  begin
    case (proc_m1_elt_f2d[34:30])
      5'd0:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[0];
      5'd1:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[1];
      5'd2:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[2];
      5'd3:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[3];
      5'd4:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[4];
      5'd5:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[5];
      5'd6:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[6];
      5'd7:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[7];
      5'd8:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[8];
      5'd9:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[9];
      5'd10:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[10];
      5'd11:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[11];
      5'd12:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[12];
      5'd13:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[13];
      5'd14:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[14];
      5'd15:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[15];
      5'd16:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[16];
      5'd17:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[17];
      5'd18:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[18];
      5'd19:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[19];
      5'd20:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[20];
      5'd21:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[21];
      5'd22:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[22];
      5'd23:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[23];
      5'd24:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[24];
      5'd25:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[25];
      5'd26:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[26];
      5'd27:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[27];
      5'd28:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[28];
      5'd29:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[29];
      5'd30:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[30];
      5'd31:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d194 =
	      proc_m3_sbFlags[31];
    endcase
  end
  always@(proc_m1_elt_f2d or proc_m3_sbFlags)
  begin
    case (proc_m1_elt_f2d[39:35])
      5'd0:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[0];
      5'd1:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[1];
      5'd2:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[2];
      5'd3:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[3];
      5'd4:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[4];
      5'd5:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[5];
      5'd6:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[6];
      5'd7:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[7];
      5'd8:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[8];
      5'd9:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[9];
      5'd10:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[10];
      5'd11:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[11];
      5'd12:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[12];
      5'd13:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[13];
      5'd14:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[14];
      5'd15:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[15];
      5'd16:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[16];
      5'd17:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[17];
      5'd18:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[18];
      5'd19:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[19];
      5'd20:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[20];
      5'd21:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[21];
      5'd22:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[22];
      5'd23:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[23];
      5'd24:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[24];
      5'd25:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[25];
      5'd26:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[26];
      5'd27:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[27];
      5'd28:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[28];
      5'd29:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[29];
      5'd30:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[30];
      5'd31:
	  SEL_ARR_proc_m3_sbFlags_58_BIT_0_59_proc_m3_sb_ETC___d330 =
	      proc_m3_sbFlags[31];
    endcase
  end
  always@(proc_m1_elt_f2d or proc_m3_sbFlags)
  begin
    case (proc_m1_elt_f2d[26:22])
      5'd0:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[0];
      5'd1:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[1];
      5'd2:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[2];
      5'd3:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[3];
      5'd4:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[4];
      5'd5:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[5];
      5'd6:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[6];
      5'd7:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[7];
      5'd8:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[8];
      5'd9:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[9];
      5'd10:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[10];
      5'd11:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[11];
      5'd12:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[12];
      5'd13:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[13];
      5'd14:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[14];
      5'd15:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[15];
      5'd16:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[16];
      5'd17:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[17];
      5'd18:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[18];
      5'd19:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[19];
      5'd20:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[20];
      5'd21:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[21];
      5'd22:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[22];
      5'd23:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[23];
      5'd24:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[24];
      5'd25:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[25];
      5'd26:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[26];
      5'd27:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[27];
      5'd28:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[28];
      5'd29:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[29];
      5'd30:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[30];
      5'd31:
	  CASE_proc_m1_elt_f2d_BITS_26_TO_22_0_proc_m3_s_ETC__q3 =
	      proc_m3_sbFlags[31];
    endcase
  end
  always@(x_5__h46141 or proc_m3_sbFlags)
  begin
    case (x_5__h46141)
      5'd0:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[0];
      5'd1:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[1];
      5'd2:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[2];
      5'd3:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[3];
      5'd4:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[4];
      5'd5:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[5];
      5'd6:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[6];
      5'd7:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[7];
      5'd8:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[8];
      5'd9:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[9];
      5'd10:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[10];
      5'd11:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[11];
      5'd12:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[12];
      5'd13:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[13];
      5'd14:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[14];
      5'd15:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[15];
      5'd16:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[16];
      5'd17:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[17];
      5'd18:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[18];
      5'd19:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[19];
      5'd20:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[20];
      5'd21:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[21];
      5'd22:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[22];
      5'd23:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[23];
      5'd24:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[24];
      5'd25:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[25];
      5'd26:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[26];
      5'd27:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[27];
      5'd28:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[28];
      5'd29:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[29];
      5'd30:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[30];
      5'd31:
	  CASE_x_56141_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q4 =
	      proc_m3_sbFlags[31];
    endcase
  end
  always@(proc_m7_elt_e2w or
	  proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_0x4___d700 or
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d695 or
	  proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_proc__ETC___d699 or
	  IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d707 or
	  IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d709 or
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d711)
  begin
    case (proc_m7_elt_e2w[61:59])
      3'h0:
	  IF_proc_m7_elt_e2w_41_BITS_61_TO_59_91_EQ_0x0__ETC___d720 =
	      SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d695 ?
		proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_proc__ETC___d699 :
		proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_0x4___d700;
      3'h1:
	  IF_proc_m7_elt_e2w_41_BITS_61_TO_59_91_EQ_0x0__ETC___d720 =
	      SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d695 ?
		proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_0x4___d700 :
		proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_proc__ETC___d699;
      3'h4:
	  IF_proc_m7_elt_e2w_41_BITS_61_TO_59_91_EQ_0x0__ETC___d720 =
	      IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d707;
      3'h5:
	  IF_proc_m7_elt_e2w_41_BITS_61_TO_59_91_EQ_0x0__ETC___d720 =
	      IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d709;
      3'h6:
	  IF_proc_m7_elt_e2w_41_BITS_61_TO_59_91_EQ_0x0__ETC___d720 =
	      SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d711 ?
		proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_proc__ETC___d699 :
		proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_0x4___d700;
      3'h7:
	  IF_proc_m7_elt_e2w_41_BITS_61_TO_59_91_EQ_0x0__ETC___d720 =
	      SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d711 ?
		proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_0x4___d700 :
		proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_proc__ETC___d699;
      default: IF_proc_m7_elt_e2w_41_BITS_61_TO_59_91_EQ_0x0__ETC___d720 =
		   proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_0x4___d700;
    endcase
  end
  always@(proc_m7_elt_e2w or
	  proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_0x4___d700 or
	  IF_proc_m7_elt_e2w_41_BITS_61_TO_59_91_EQ_0x0__ETC___d720 or
	  x__h55606 or y__h55450)
  begin
    case (proc_m7_elt_e2w[53:47])
      7'h63:
	  x_9__h55389 =
	      IF_proc_m7_elt_e2w_41_BITS_61_TO_59_91_EQ_0x0__ETC___d720;
      7'h67: x_9__h55389 = x__h55606[6:0] + proc_m7_elt_e2w[73:67];
      7'h6F: x_9__h55389 = proc_m7_elt_e2w[46:40] + y__h55450;
      default: x_9__h55389 =
		   proc_m7_elt_e2w_41_BITS_46_TO_40_80_PLUS_0x4___d700;
    endcase
  end
  always@(proc_m11_stalled or
	  proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_0x4___d923 or
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d918 or
	  proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_proc__ETC___d922 or
	  IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d930 or
	  IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d932 or
	  SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d934)
  begin
    case (proc_m11_stalled[29:27])
      3'h0:
	  IF_proc_m11_stalled_34_BITS_29_TO_27_14_EQ_0x0_ETC___d943 =
	      SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d918 ?
		proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_proc__ETC___d922 :
		proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_0x4___d923;
      3'h1:
	  IF_proc_m11_stalled_34_BITS_29_TO_27_14_EQ_0x0_ETC___d943 =
	      SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d918 ?
		proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_0x4___d923 :
		proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_proc__ETC___d922;
      3'h4:
	  IF_proc_m11_stalled_34_BITS_29_TO_27_14_EQ_0x0_ETC___d943 =
	      IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d930;
      3'h5:
	  IF_proc_m11_stalled_34_BITS_29_TO_27_14_EQ_0x0_ETC___d943 =
	      IF_SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc__ETC___d932;
      3'h6:
	  IF_proc_m11_stalled_34_BITS_29_TO_27_14_EQ_0x0_ETC___d943 =
	      SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d934 ?
		proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_proc__ETC___d922 :
		proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_0x4___d923;
      3'h7:
	  IF_proc_m11_stalled_34_BITS_29_TO_27_14_EQ_0x0_ETC___d943 =
	      SEL_ARR_proc_m2_rf_09_BITS_31_TO_0_10_proc_m2__ETC___d934 ?
		proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_0x4___d923 :
		proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_proc__ETC___d922;
      default: IF_proc_m11_stalled_34_BITS_29_TO_27_14_EQ_0x0_ETC___d943 =
		   proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_0x4___d923;
    endcase
  end
  always@(proc_m11_stalled or
	  proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_0x4___d923 or
	  IF_proc_m11_stalled_34_BITS_29_TO_27_14_EQ_0x0_ETC___d943 or
	  x__h64251 or y__h64093)
  begin
    case (proc_m11_stalled[21:15])
      7'h63:
	  x_10__h64026 =
	      IF_proc_m11_stalled_34_BITS_29_TO_27_14_EQ_0x0_ETC___d943;
      7'h67: x_10__h64026 = x__h64251[6:0] + proc_m11_stalled[41:35];
      7'h6F: x_10__h64026 = proc_m11_stalled[14:8] + y__h64093;
      default: x_10__h64026 =
		   proc_m11_stalled_34_BITS_14_TO_8_03_PLUS_0x4___d923;
    endcase
  end
  always@(proc_m4_elt_d2e or y__h50177 or y__h50306)
  begin
    case (proc_m4_elt_d2e[29:27])
      3'h0:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d492 =
	      proc_m4_elt_d2e[110:79] + y__h50177;
      3'h1:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d492 =
	      proc_m4_elt_d2e[110:79] << proc_m4_elt_d2e[39:35];
      3'h2:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d492 =
	      (proc_m4_elt_d2e[110:79] < y__h50177) ? 32'h00000001 : 32'h0;
      3'h3:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d492 =
	      (proc_m4_elt_d2e[110:79] < y__h50306) ? 32'h00000001 : 32'h0;
      3'h4:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d492 =
	      proc_m4_elt_d2e[110:79] ^ y__h50177;
      3'h5:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d492 =
	      proc_m4_elt_d2e[110:79] >> proc_m4_elt_d2e[39:35];
      3'h6:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d492 =
	      proc_m4_elt_d2e[110:79] | y__h50177;
      3'h7:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d492 =
	      proc_m4_elt_d2e[110:79] & y__h50177;
    endcase
  end
  always@(proc_m4_elt_d2e or
	  proc_m4_elt_d2e_42_BITS_110_TO_79_63_MINUS_pro_ETC___d500 or
	  proc_m4_elt_d2e_42_BITS_110_TO_79_63_SRL_proc__ETC___d506)
  begin
    case (proc_m4_elt_d2e[29:27])
      3'h0:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d516 =
	      proc_m4_elt_d2e[110:79] + proc_m4_elt_d2e[78:47];
      3'h1:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d516 =
	      proc_m4_elt_d2e[110:79] << proc_m4_elt_d2e[51:47];
      3'h2:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d516 =
	      proc_m4_elt_d2e_42_BITS_110_TO_79_63_MINUS_pro_ETC___d500[31] ?
		32'h00000001 :
		32'h0;
      3'h3:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d516 =
	      (proc_m4_elt_d2e[110:79] < proc_m4_elt_d2e[78:47]) ?
		32'h00000001 :
		32'h0;
      3'h4:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d516 =
	      proc_m4_elt_d2e[110:79] ^ proc_m4_elt_d2e[78:47];
      3'h5:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d516 =
	      proc_m4_elt_d2e_42_BITS_110_TO_79_63_SRL_proc__ETC___d506;
      3'h6:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d516 =
	      proc_m4_elt_d2e[110:79] | proc_m4_elt_d2e[78:47];
      3'h7:
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d516 =
	      proc_m4_elt_d2e[110:79] & proc_m4_elt_d2e[78:47];
    endcase
  end
  always@(proc_m4_elt_d2e or
	  proc_m4_elt_d2e_42_BITS_110_TO_79_63_MINUS_pro_ETC___d500 or
	  proc_m4_elt_d2e_42_BITS_110_TO_79_63_SRL_proc__ETC___d506)
  begin
    case (proc_m4_elt_d2e[29:27])
      3'h0:
	  CASE_proc_m4_elt_d2e_BITS_29_TO_27_0x0_proc_m4_ETC__q7 =
	      proc_m4_elt_d2e_42_BITS_110_TO_79_63_MINUS_pro_ETC___d500;
      3'h5:
	  CASE_proc_m4_elt_d2e_BITS_29_TO_27_0x0_proc_m4_ETC__q7 =
	      proc_m4_elt_d2e_42_BITS_110_TO_79_63_SRL_proc__ETC___d506;
      default: CASE_proc_m4_elt_d2e_BITS_29_TO_27_0x0_proc_m4_ETC__q7 = 32'h0;
    endcase
  end
  always@(proc_m4_elt_d2e or
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d516 or
	  _0_CONCAT_proc_m4_elt_d2e_42_BITS_110_TO_79_63__ETC___d523 or
	  CASE_proc_m4_elt_d2e_BITS_29_TO_27_0x0_proc_m4_ETC__q7)
  begin
    case (proc_m4_elt_d2e[46:40])
      7'h0:
	  IF_proc_m4_elt_d2e_42_BITS_46_TO_40_94_EQ_0x0__ETC___d528 =
	      IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d516;
      7'h01:
	  IF_proc_m4_elt_d2e_42_BITS_46_TO_40_94_EQ_0x0__ETC___d528 =
	      (proc_m4_elt_d2e[29:27] == 3'h0) ?
		_0_CONCAT_proc_m4_elt_d2e_42_BITS_110_TO_79_63__ETC___d523[31:0] :
		32'h0;
      7'h20:
	  IF_proc_m4_elt_d2e_42_BITS_46_TO_40_94_EQ_0x0__ETC___d528 =
	      CASE_proc_m4_elt_d2e_BITS_29_TO_27_0x0_proc_m4_ETC__q7;
      default: IF_proc_m4_elt_d2e_42_BITS_46_TO_40_94_EQ_0x0__ETC___d528 =
		   32'h0;
    endcase
  end
  always@(proc_m4_elt_d2e or
	  x__h50006 or
	  IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d492 or
	  IF_proc_m4_elt_d2e_42_BITS_46_TO_40_94_EQ_0x0__ETC___d528 or
	  x__h50069)
  begin
    case (proc_m4_elt_d2e[21:15])
      7'h17: x_6__h49805 = x__h50006 + { proc_m4_elt_d2e[46:27], 12'h0 };
      7'h1B:
	  x_6__h49805 =
	      IF_proc_m4_elt_d2e_42_BITS_29_TO_27_61_EQ_0x0__ETC___d492;
      7'h33:
	  x_6__h49805 =
	      IF_proc_m4_elt_d2e_42_BITS_46_TO_40_94_EQ_0x0__ETC___d528;
      7'h37: x_6__h49805 = { proc_m4_elt_d2e[46:27], 12'h0 };
      7'h67, 7'h6F: x_6__h49805 = { 25'd0, x__h50069 };
      default: x_6__h49805 = 32'h0;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        pgmInitBase <= `BSV_ASSIGNMENT_DELAY 32'd0;
	pgmInitOfs <= `BSV_ASSIGNMENT_DELAY 5'd0;
	pgmInitOn <= `BSV_ASSIGNMENT_DELAY 1'd1;
	proc_m11_stall <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m11_stalled <= `BSV_ASSIGNMENT_DELAY 150'd0;
	proc_m1_elt_f2d <= `BSV_ASSIGNMENT_DELAY 47'd0;
	proc_m1_full_f2d <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m2_rf <= `BSV_ASSIGNMENT_DELAY 1024'd0;
	proc_m3_sbFlags <= `BSV_ASSIGNMENT_DELAY 32'd0;
	proc_m4_elt_d2e <= `BSV_ASSIGNMENT_DELAY 150'd0;
	proc_m4_full_d2e <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m5_elt_w2d <= `BSV_ASSIGNMENT_DELAY 7'd0;
	proc_m5_full_w2d <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m6_eEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m7_elt_e2w <= `BSV_ASSIGNMENT_DELAY 182'd0;
	proc_m7_full_e2w <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m8_fEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m8_pc <= `BSV_ASSIGNMENT_DELAY 7'h0;
	proc_m8_pgm <= `BSV_ASSIGNMENT_DELAY 1024'd0;
	proc_m8_pinit <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m8_pinitOfs <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (pgmInitBase$EN)
	  pgmInitBase <= `BSV_ASSIGNMENT_DELAY pgmInitBase$D_IN;
	if (pgmInitOfs$EN)
	  pgmInitOfs <= `BSV_ASSIGNMENT_DELAY pgmInitOfs$D_IN;
	if (pgmInitOn$EN) pgmInitOn <= `BSV_ASSIGNMENT_DELAY pgmInitOn$D_IN;
	if (proc_m11_stall$EN)
	  proc_m11_stall <= `BSV_ASSIGNMENT_DELAY proc_m11_stall$D_IN;
	if (proc_m11_stalled$EN)
	  proc_m11_stalled <= `BSV_ASSIGNMENT_DELAY proc_m11_stalled$D_IN;
	if (proc_m1_elt_f2d$EN)
	  proc_m1_elt_f2d <= `BSV_ASSIGNMENT_DELAY proc_m1_elt_f2d$D_IN;
	if (proc_m1_full_f2d$EN)
	  proc_m1_full_f2d <= `BSV_ASSIGNMENT_DELAY proc_m1_full_f2d$D_IN;
	if (proc_m2_rf$EN)
	  proc_m2_rf <= `BSV_ASSIGNMENT_DELAY proc_m2_rf$D_IN;
	if (proc_m3_sbFlags$EN)
	  proc_m3_sbFlags <= `BSV_ASSIGNMENT_DELAY proc_m3_sbFlags$D_IN;
	if (proc_m4_elt_d2e$EN)
	  proc_m4_elt_d2e <= `BSV_ASSIGNMENT_DELAY proc_m4_elt_d2e$D_IN;
	if (proc_m4_full_d2e$EN)
	  proc_m4_full_d2e <= `BSV_ASSIGNMENT_DELAY proc_m4_full_d2e$D_IN;
	if (proc_m5_elt_w2d$EN)
	  proc_m5_elt_w2d <= `BSV_ASSIGNMENT_DELAY proc_m5_elt_w2d$D_IN;
	if (proc_m5_full_w2d$EN)
	  proc_m5_full_w2d <= `BSV_ASSIGNMENT_DELAY proc_m5_full_w2d$D_IN;
	if (proc_m6_eEpoch$EN)
	  proc_m6_eEpoch <= `BSV_ASSIGNMENT_DELAY proc_m6_eEpoch$D_IN;
	if (proc_m7_elt_e2w$EN)
	  proc_m7_elt_e2w <= `BSV_ASSIGNMENT_DELAY proc_m7_elt_e2w$D_IN;
	if (proc_m7_full_e2w$EN)
	  proc_m7_full_e2w <= `BSV_ASSIGNMENT_DELAY proc_m7_full_e2w$D_IN;
	if (proc_m8_fEpoch$EN)
	  proc_m8_fEpoch <= `BSV_ASSIGNMENT_DELAY proc_m8_fEpoch$D_IN;
	if (proc_m8_pc$EN)
	  proc_m8_pc <= `BSV_ASSIGNMENT_DELAY proc_m8_pc$D_IN;
	if (proc_m8_pgm$EN)
	  proc_m8_pgm <= `BSV_ASSIGNMENT_DELAY proc_m8_pgm$D_IN;
	if (proc_m8_pinit$EN)
	  proc_m8_pinit <= `BSV_ASSIGNMENT_DELAY proc_m8_pinit$D_IN;
	if (proc_m8_pinitOfs$EN)
	  proc_m8_pinitOfs <= `BSV_ASSIGNMENT_DELAY proc_m8_pinitOfs$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    pgmInitBase = 32'hAAAAAAAA;
    pgmInitOfs = 5'h0A;
    pgmInitOn = 1'h0;
    proc_m11_stall = 1'h0;
    proc_m11_stalled = 150'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    proc_m1_elt_f2d = 47'h2AAAAAAAAAAA;
    proc_m1_full_f2d = 1'h0;
    proc_m2_rf =
	1024'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    proc_m3_sbFlags = 32'hAAAAAAAA;
    proc_m4_elt_d2e = 150'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    proc_m4_full_d2e = 1'h0;
    proc_m5_elt_w2d = 7'h2A;
    proc_m5_full_w2d = 1'h0;
    proc_m6_eEpoch = 1'h0;
    proc_m7_elt_e2w = 182'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    proc_m7_full_e2w = 1'h0;
    proc_m8_fEpoch = 1'h0;
    proc_m8_pc = 7'h2A;
    proc_m8_pgm =
	1024'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    proc_m8_pinit = 1'h0;
    proc_m8_pinitOfs = 5'h0A;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkTop

