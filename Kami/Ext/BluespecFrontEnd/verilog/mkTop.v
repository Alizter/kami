//
// Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
//
// On Fri Apr  5 11:34:36 EDT 2019
//
//
// Ports:
// Name                         I/O  size props
// obtain_rq_get                  O    65 reg
// RDY_obtain_rq_get              O     1 reg
// RDY_send_rs_put                O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// send_rs_put                    I    32 reg
// EN_send_rs_put                 I     1
// EN_obtain_rq_get               I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTop(CLK,
	     RST_N,

	     EN_obtain_rq_get,
	     obtain_rq_get,
	     RDY_obtain_rq_get,

	     send_rs_put,
	     EN_send_rs_put,
	     RDY_send_rs_put);
  input  CLK;
  input  RST_N;

  // actionvalue method obtain_rq_get
  input  EN_obtain_rq_get;
  output [64 : 0] obtain_rq_get;
  output RDY_obtain_rq_get;

  // action method send_rs_put
  input  [31 : 0] send_rs_put;
  input  EN_send_rs_put;
  output RDY_send_rs_put;

  // signals for module outputs
  wire [64 : 0] obtain_rq_get;
  wire RDY_obtain_rq_get, RDY_send_rs_put;

  // register proc_m11_stall
  reg proc_m11_stall;
  wire proc_m11_stall$D_IN, proc_m11_stall$EN;

  // register proc_m11_stalled
  reg [199 : 0] proc_m11_stalled;
  wire [199 : 0] proc_m11_stalled$D_IN;
  wire proc_m11_stalled$EN;

  // register proc_m1_elt_f2d
  reg [96 : 0] proc_m1_elt_f2d;
  wire [96 : 0] proc_m1_elt_f2d$D_IN;
  wire proc_m1_elt_f2d$EN;

  // register proc_m1_full_f2d
  reg proc_m1_full_f2d;
  wire proc_m1_full_f2d$D_IN, proc_m1_full_f2d$EN;

  // register proc_m2_rf
  reg [1023 : 0] proc_m2_rf;
  wire [1023 : 0] proc_m2_rf$D_IN;
  wire proc_m2_rf$EN;

  // register proc_m3_sbFlags
  reg [31 : 0] proc_m3_sbFlags;
  reg [31 : 0] proc_m3_sbFlags$D_IN;
  wire proc_m3_sbFlags$EN;

  // register proc_m4_elt_d2e
  reg [199 : 0] proc_m4_elt_d2e;
  reg [199 : 0] proc_m4_elt_d2e$D_IN;
  wire proc_m4_elt_d2e$EN;

  // register proc_m4_full_d2e
  reg proc_m4_full_d2e;
  wire proc_m4_full_d2e$D_IN, proc_m4_full_d2e$EN;

  // register proc_m5_elt_w2d
  reg [31 : 0] proc_m5_elt_w2d;
  wire [31 : 0] proc_m5_elt_w2d$D_IN;
  wire proc_m5_elt_w2d$EN;

  // register proc_m5_full_w2d
  reg proc_m5_full_w2d;
  wire proc_m5_full_w2d$D_IN, proc_m5_full_w2d$EN;

  // register proc_m6_eEpoch
  reg proc_m6_eEpoch;
  wire proc_m6_eEpoch$D_IN, proc_m6_eEpoch$EN;

  // register proc_m7_elt_e2w
  reg [231 : 0] proc_m7_elt_e2w;
  wire [231 : 0] proc_m7_elt_e2w$D_IN;
  wire proc_m7_elt_e2w$EN;

  // register proc_m7_full_e2w
  reg proc_m7_full_e2w;
  wire proc_m7_full_e2w$D_IN, proc_m7_full_e2w$EN;

  // register proc_m8_fEpoch
  reg proc_m8_fEpoch;
  wire proc_m8_fEpoch$D_IN, proc_m8_fEpoch$EN;

  // register proc_m8_pc
  reg [31 : 0] proc_m8_pc;
  wire [31 : 0] proc_m8_pc$D_IN;
  wire proc_m8_pc$EN;

  // register proc_m8_pgm
  reg [1023 : 0] proc_m8_pgm;
  wire [1023 : 0] proc_m8_pgm$D_IN;
  wire proc_m8_pgm$EN;

  // register proc_m8_pinit
  reg proc_m8_pinit;
  wire proc_m8_pinit$D_IN, proc_m8_pinit$EN;

  // register proc_m8_pinitOfs
  reg [4 : 0] proc_m8_pinitOfs;
  wire [4 : 0] proc_m8_pinitOfs$D_IN;
  wire proc_m8_pinitOfs$EN;

  // ports of submodule rqs
  wire [64 : 0] rqs$D_IN, rqs$D_OUT;
  wire rqs$CLR, rqs$DEQ, rqs$EMPTY_N, rqs$ENQ, rqs$FULL_N;

  // ports of submodule rss
  wire [31 : 0] rss$D_IN, rss$D_OUT;
  wire rss$CLR, rss$DEQ, rss$EMPTY_N, rss$ENQ, rss$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_proc_m11_wbNm,
       CAN_FIRE_RL_proc_m11_wbNmZ,
       WILL_FIRE_RL_proc_m10_execBypass,
       WILL_FIRE_RL_proc_m10_execNm,
       WILL_FIRE_RL_proc_m11_repLd,
       WILL_FIRE_RL_proc_m11_repSt,
       WILL_FIRE_RL_proc_m11_reqLd,
       WILL_FIRE_RL_proc_m11_reqLdZ,
       WILL_FIRE_RL_proc_m11_reqSt,
       WILL_FIRE_RL_proc_m11_wbNm,
       WILL_FIRE_RL_proc_m11_wbNmZ,
       WILL_FIRE_RL_proc_m11_wrongEpoch,
       WILL_FIRE_RL_proc_m8_instFetch,
       WILL_FIRE_RL_proc_m8_modifyPc,
       WILL_FIRE_RL_proc_m9_decodeLd,
       WILL_FIRE_RL_proc_m9_decodeNm,
       WILL_FIRE_RL_proc_m9_decodeSt;

  // inputs to muxes for submodule ports
  wire [1023 : 0] MUX_proc_m2_rf$write_1__VAL_1,
		  MUX_proc_m2_rf$write_1__VAL_2;
  wire [231 : 0] MUX_proc_m7_elt_e2w$write_1__VAL_1,
		 MUX_proc_m7_elt_e2w$write_1__VAL_2;
  wire [199 : 0] MUX_proc_m4_elt_d2e$write_1__VAL_1,
		 MUX_proc_m4_elt_d2e$write_1__VAL_2,
		 MUX_proc_m4_elt_d2e$write_1__VAL_3;
  wire [64 : 0] MUX_rqs$enq_1__VAL_1, MUX_rqs$enq_1__VAL_2;
  wire [31 : 0] MUX_proc_m3_sbFlags$write_1__VAL_1,
		MUX_proc_m3_sbFlags$write_1__VAL_3,
		MUX_proc_m3_sbFlags$write_1__VAL_4,
		MUX_proc_m3_sbFlags$write_1__VAL_5;
  wire MUX_proc_m11_stall$write_1__SEL_2,
       MUX_proc_m3_sbFlags$write_1__SEL_1,
       MUX_proc_m3_sbFlags$write_1__SEL_2,
       MUX_proc_m4_full_d2e$write_1__SEL_1,
       MUX_proc_m5_elt_w2d$write_1__PSEL_1,
       MUX_proc_m5_elt_w2d$write_1__PSEL_2,
       MUX_proc_m5_elt_w2d$write_1__SEL_1,
       MUX_proc_m6_eEpoch$write_1__SEL_1,
       MUX_proc_m7_full_e2w$write_1__SEL_1;

  // remaining internal signals
  reg [31 : 0] CASE_proc_m4_elt_d2e_BITS_79_TO_77_0x0_proc_m4_ETC__q9,
	       IF_proc_m11_stalled_12_BITS_79_TO_77_98_EQ_0x0_ETC___d930,
	       IF_proc_m4_elt_d2e_25_BITS_79_TO_77_39_EQ_0x0__ETC___d495,
	       IF_proc_m4_elt_d2e_25_BITS_96_TO_90_37_EQ_0x0__ETC___d478,
	       IF_proc_m7_elt_e2w_10_BITS_111_TO_109_66_EQ_0x_ETC___d698,
	       SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226,
	       x_10__h63228,
	       x_6__h49402,
	       x_9__h54592,
	       x__h38027,
	       x__h45485,
	       x__h54803,
	       x__h63447,
	       y__h54969,
	       y__h63613;
  reg [1 : 0] x_4__h38283;
  reg CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5,
      CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6,
      SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177,
      SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313;
  wire [959 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d795;
  wire [895 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d790;
  wire [831 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d785;
  wire [767 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d780;
  wire [703 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d775;
  wire [639 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d770;
  wire [575 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d765;
  wire [511 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d760;
  wire [447 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d755;
  wire [383 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d750;
  wire [319 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d745;
  wire [255 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d740;
  wire [191 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d735;
  wire [127 : 0] IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d730,
		 _0_CONCAT_proc_m4_elt_d2e_25_BITS_160_TO_129_41_ETC___d473;
  wire [31 : 0] IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d685,
		IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d687,
		IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d917,
		IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d919,
		proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_0x4___d910,
		proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_SEXT_ETC___d909,
		proc_m4_elt_d2e_25_BITS_160_TO_129_41_MINUS_pr_ETC___d456,
		proc_m4_elt_d2e_25_BITS_64_TO_33_34_PLUS_0x4___d435,
		proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_0x4___d678,
		proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_SEXT__ETC___d677,
		x3447_MINUS_y3613__q8,
		x4803_MINUS_y4969__q7,
		x_4__h37971,
		x__h40233,
		x__h45381,
		x__h54351,
		y__h50180,
		y__h50362,
		y__h54652,
		y__h54804,
		y__h55093,
		y__h63294,
		y__h63448,
		y__h63737;
  wire [19 : 0] x__h54655, x__h63299;
  wire [11 : 0] proc_m11_stalled_BITS_96_TO_85__q3,
		proc_m1_elt_f2d_BITS_96_TO_85__q4,
		proc_m4_elt_d2e_BITS_96_TO_85__q1,
		proc_m7_elt_e2w_BITS_128_TO_117__q2,
		x__h45431,
		x__h55094,
		x__h63738;
  wire [4 : 0] x_5__h45738, x__h34708;
  wire NOT_IF_proc_m11_stalled_12_BITS_71_TO_65_81_EQ_ETC___d936,
       NOT_IF_proc_m7_elt_e2w_10_BITS_103_TO_97_49_EQ_ETC___d704,
       NOT_SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m_ETC___d337,
       NOT_proc_m4_full_d2e_39_40_AND_NOT_SEL_ARR_pro_ETC___d187,
       NOT_proc_m4_full_d2e_39_40_AND_NOT_SEL_ARR_pro_ETC___d318,
       SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d670,
       SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d689,
       SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d902,
       SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d921,
       proc_m7_elt_e2w_10_BIT_32_11_EQ_proc_m6_eEpoch_12___d513;

  // actionvalue method obtain_rq_get
  assign obtain_rq_get = rqs$D_OUT ;
  assign RDY_obtain_rq_get = rqs$EMPTY_N ;

  // action method send_rs_put
  assign RDY_send_rs_put = rss$FULL_N ;

  // submodule rqs
  FIFO2 #(.width(32'd65), .guarded(32'd1)) rqs(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(rqs$D_IN),
					       .ENQ(rqs$ENQ),
					       .DEQ(rqs$DEQ),
					       .CLR(rqs$CLR),
					       .D_OUT(rqs$D_OUT),
					       .FULL_N(rqs$FULL_N),
					       .EMPTY_N(rqs$EMPTY_N));

  // submodule rss
  FIFO2 #(.width(32'd32), .guarded(32'd1)) rss(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(rss$D_IN),
					       .ENQ(rss$ENQ),
					       .DEQ(rss$DEQ),
					       .CLR(rss$CLR),
					       .D_OUT(rss$D_OUT),
					       .FULL_N(rss$FULL_N),
					       .EMPTY_N(rss$EMPTY_N));

  // rule RL_proc_m8_instFetch
  assign WILL_FIRE_RL_proc_m8_instFetch = !proc_m1_full_f2d && proc_m8_pinit ;

  // rule RL_proc_m8_modifyPc
  assign WILL_FIRE_RL_proc_m8_modifyPc = proc_m8_pinit && proc_m5_full_w2d ;

  // rule RL_proc_m9_decodeLd
  assign WILL_FIRE_RL_proc_m9_decodeLd =
	     !proc_m5_full_w2d &&
	     NOT_proc_m4_full_d2e_39_40_AND_NOT_SEL_ARR_pro_ETC___d187 ;

  // rule RL_proc_m9_decodeSt
  assign WILL_FIRE_RL_proc_m9_decodeSt =
	     !proc_m5_full_w2d &&
	     NOT_proc_m4_full_d2e_39_40_AND_NOT_SEL_ARR_pro_ETC___d318 ;

  // rule RL_proc_m9_decodeNm
  assign WILL_FIRE_RL_proc_m9_decodeNm =
	     !proc_m5_full_w2d && !proc_m4_full_d2e &&
	     NOT_SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m_ETC___d337 ;

  // rule RL_proc_m10_execNm
  assign WILL_FIRE_RL_proc_m10_execNm =
	     !proc_m7_full_e2w && proc_m4_elt_d2e[199:198] == 2'h3 &&
	     proc_m4_full_d2e ;

  // rule RL_proc_m10_execBypass
  assign WILL_FIRE_RL_proc_m10_execBypass =
	     !proc_m7_full_e2w && proc_m4_elt_d2e[199:198] != 2'h3 &&
	     proc_m4_full_d2e ;

  // rule RL_proc_m11_wrongEpoch
  assign WILL_FIRE_RL_proc_m11_wrongEpoch =
	     !proc_m11_stall &&
	     !proc_m7_elt_e2w_10_BIT_32_11_EQ_proc_m6_eEpoch_12___d513 &&
	     proc_m7_full_e2w &&
	     !WILL_FIRE_RL_proc_m9_decodeNm &&
	     !WILL_FIRE_RL_proc_m9_decodeLd ;

  // rule RL_proc_m11_reqLd
  assign WILL_FIRE_RL_proc_m11_reqLd =
	     !proc_m11_stall && proc_m7_elt_e2w[229:225] != 5'd0 &&
	     proc_m7_elt_e2w_10_BIT_32_11_EQ_proc_m6_eEpoch_12___d513 &&
	     proc_m7_elt_e2w[231:230] == 2'h0 &&
	     proc_m7_full_e2w &&
	     rqs$FULL_N ;

  // rule RL_proc_m11_reqLdZ
  assign WILL_FIRE_RL_proc_m11_reqLdZ =
	     !proc_m11_stall &&
	     proc_m7_elt_e2w_10_BIT_32_11_EQ_proc_m6_eEpoch_12___d513 &&
	     proc_m7_elt_e2w[231:230] == 2'h0 &&
	     proc_m7_elt_e2w[229:225] == 5'd0 &&
	     proc_m7_full_e2w &&
	     !proc_m5_full_w2d ;

  // rule RL_proc_m11_reqSt
  assign WILL_FIRE_RL_proc_m11_reqSt =
	     !proc_m11_stall &&
	     proc_m7_elt_e2w_10_BIT_32_11_EQ_proc_m6_eEpoch_12___d513 &&
	     proc_m7_elt_e2w[231:230] == 2'h1 &&
	     proc_m7_full_e2w &&
	     rqs$FULL_N ;

  // rule RL_proc_m11_repLd
  assign WILL_FIRE_RL_proc_m11_repLd =
	     proc_m11_stalled[199:198] == 2'h0 && proc_m11_stall &&
	     rss$EMPTY_N &&
	     !proc_m5_full_w2d &&
	     !WILL_FIRE_RL_proc_m9_decodeNm &&
	     !WILL_FIRE_RL_proc_m9_decodeLd ;

  // rule RL_proc_m11_repSt
  assign WILL_FIRE_RL_proc_m11_repSt =
	     proc_m11_stalled[199:198] == 2'h1 && proc_m11_stall &&
	     rss$EMPTY_N &&
	     !proc_m5_full_w2d ;

  // rule RL_proc_m11_wbNm
  assign CAN_FIRE_RL_proc_m11_wbNm =
	     !proc_m11_stall && proc_m7_elt_e2w[229:225] != 5'd0 &&
	     proc_m7_elt_e2w_10_BIT_32_11_EQ_proc_m6_eEpoch_12___d513 &&
	     proc_m7_elt_e2w[231:230] == 2'h3 &&
	     proc_m7_full_e2w &&
	     !proc_m5_full_w2d ;
  assign WILL_FIRE_RL_proc_m11_wbNm =
	     CAN_FIRE_RL_proc_m11_wbNm && !WILL_FIRE_RL_proc_m9_decodeNm &&
	     !WILL_FIRE_RL_proc_m9_decodeLd ;

  // rule RL_proc_m11_wbNmZ
  assign CAN_FIRE_RL_proc_m11_wbNmZ =
	     !proc_m11_stall &&
	     proc_m7_elt_e2w_10_BIT_32_11_EQ_proc_m6_eEpoch_12___d513 &&
	     proc_m7_elt_e2w[231:230] == 2'h3 &&
	     proc_m7_elt_e2w[229:225] == 5'd0 &&
	     proc_m7_full_e2w &&
	     !proc_m5_full_w2d ;
  assign WILL_FIRE_RL_proc_m11_wbNmZ =
	     CAN_FIRE_RL_proc_m11_wbNmZ && !WILL_FIRE_RL_proc_m9_decodeNm &&
	     !WILL_FIRE_RL_proc_m9_decodeLd ;

  // inputs to muxes for submodule ports
  assign MUX_proc_m11_stall$write_1__SEL_2 =
	     WILL_FIRE_RL_proc_m11_reqSt || WILL_FIRE_RL_proc_m11_reqLd ;
  assign MUX_proc_m3_sbFlags$write_1__SEL_1 =
	     WILL_FIRE_RL_proc_m11_wrongEpoch &&
	     (proc_m7_elt_e2w[231:230] == 2'h0 ||
	      proc_m7_elt_e2w[231:230] == 2'h3) ;
  assign MUX_proc_m3_sbFlags$write_1__SEL_2 =
	     WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ;
  assign MUX_proc_m4_full_d2e$write_1__SEL_1 =
	     WILL_FIRE_RL_proc_m10_execBypass ||
	     WILL_FIRE_RL_proc_m10_execNm ;
  assign MUX_proc_m5_elt_w2d$write_1__PSEL_1 =
	     WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ||
	     WILL_FIRE_RL_proc_m11_reqLdZ ;
  assign MUX_proc_m5_elt_w2d$write_1__SEL_1 =
	     MUX_proc_m5_elt_w2d$write_1__PSEL_1 &&
	     NOT_IF_proc_m7_elt_e2w_10_BITS_103_TO_97_49_EQ_ETC___d704 ;
  assign MUX_proc_m5_elt_w2d$write_1__PSEL_2 =
	     WILL_FIRE_RL_proc_m11_repSt || WILL_FIRE_RL_proc_m11_repLd ;
  assign MUX_proc_m6_eEpoch$write_1__SEL_1 =
	     MUX_proc_m5_elt_w2d$write_1__PSEL_1 &&
	     NOT_IF_proc_m7_elt_e2w_10_BITS_103_TO_97_49_EQ_ETC___d704 ;
  assign MUX_proc_m7_full_e2w$write_1__SEL_1 =
	     WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ||
	     WILL_FIRE_RL_proc_m11_reqSt ||
	     WILL_FIRE_RL_proc_m11_reqLdZ ||
	     WILL_FIRE_RL_proc_m11_reqLd ||
	     WILL_FIRE_RL_proc_m11_wrongEpoch ;
  assign MUX_proc_m2_rf$write_1__VAL_1 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d795,
	       (proc_m11_stalled[197:193] == 5'd1) ?
		 rss$D_OUT :
		 proc_m2_rf[63:32],
	       (proc_m11_stalled[197:193] == 5'd0) ?
		 rss$D_OUT :
		 proc_m2_rf[31:0] } ;
  assign MUX_proc_m2_rf$write_1__VAL_2 =
	     { (proc_m7_elt_e2w[229:225] == 5'd31) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[1023:992],
	       (proc_m7_elt_e2w[229:225] == 5'd30) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[991:960],
	       (proc_m7_elt_e2w[229:225] == 5'd29) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[959:928],
	       (proc_m7_elt_e2w[229:225] == 5'd28) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[927:896],
	       (proc_m7_elt_e2w[229:225] == 5'd27) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[895:864],
	       (proc_m7_elt_e2w[229:225] == 5'd26) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[863:832],
	       (proc_m7_elt_e2w[229:225] == 5'd25) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[831:800],
	       (proc_m7_elt_e2w[229:225] == 5'd24) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[799:768],
	       (proc_m7_elt_e2w[229:225] == 5'd23) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[767:736],
	       (proc_m7_elt_e2w[229:225] == 5'd22) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[735:704],
	       (proc_m7_elt_e2w[229:225] == 5'd21) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[703:672],
	       (proc_m7_elt_e2w[229:225] == 5'd20) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[671:640],
	       (proc_m7_elt_e2w[229:225] == 5'd19) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[639:608],
	       (proc_m7_elt_e2w[229:225] == 5'd18) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[607:576],
	       (proc_m7_elt_e2w[229:225] == 5'd17) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[575:544],
	       (proc_m7_elt_e2w[229:225] == 5'd16) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[543:512],
	       (proc_m7_elt_e2w[229:225] == 5'd15) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[511:480],
	       (proc_m7_elt_e2w[229:225] == 5'd14) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[479:448],
	       (proc_m7_elt_e2w[229:225] == 5'd13) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[447:416],
	       (proc_m7_elt_e2w[229:225] == 5'd12) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[415:384],
	       (proc_m7_elt_e2w[229:225] == 5'd11) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[383:352],
	       (proc_m7_elt_e2w[229:225] == 5'd10) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[351:320],
	       (proc_m7_elt_e2w[229:225] == 5'd9) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[319:288],
	       (proc_m7_elt_e2w[229:225] == 5'd8) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[287:256],
	       (proc_m7_elt_e2w[229:225] == 5'd7) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[255:224],
	       (proc_m7_elt_e2w[229:225] == 5'd6) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[223:192],
	       (proc_m7_elt_e2w[229:225] == 5'd5) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[191:160],
	       (proc_m7_elt_e2w[229:225] == 5'd4) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[159:128],
	       (proc_m7_elt_e2w[229:225] == 5'd3) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[127:96],
	       (proc_m7_elt_e2w[229:225] == 5'd2) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[95:64],
	       (proc_m7_elt_e2w[229:225] == 5'd1) ?
		 proc_m7_elt_e2w[31:0] :
		 proc_m2_rf[63:32],
	       proc_m2_rf[31:0] } ;
  assign MUX_proc_m3_sbFlags$write_1__VAL_1 =
	     { proc_m7_elt_e2w[229:225] != 5'd31 && proc_m3_sbFlags[31],
	       proc_m7_elt_e2w[229:225] != 5'd30 && proc_m3_sbFlags[30],
	       proc_m7_elt_e2w[229:225] != 5'd29 && proc_m3_sbFlags[29],
	       proc_m7_elt_e2w[229:225] != 5'd28 && proc_m3_sbFlags[28],
	       proc_m7_elt_e2w[229:225] != 5'd27 && proc_m3_sbFlags[27],
	       proc_m7_elt_e2w[229:225] != 5'd26 && proc_m3_sbFlags[26],
	       proc_m7_elt_e2w[229:225] != 5'd25 && proc_m3_sbFlags[25],
	       proc_m7_elt_e2w[229:225] != 5'd24 && proc_m3_sbFlags[24],
	       proc_m7_elt_e2w[229:225] != 5'd23 && proc_m3_sbFlags[23],
	       proc_m7_elt_e2w[229:225] != 5'd22 && proc_m3_sbFlags[22],
	       proc_m7_elt_e2w[229:225] != 5'd21 && proc_m3_sbFlags[21],
	       proc_m7_elt_e2w[229:225] != 5'd20 && proc_m3_sbFlags[20],
	       proc_m7_elt_e2w[229:225] != 5'd19 && proc_m3_sbFlags[19],
	       proc_m7_elt_e2w[229:225] != 5'd18 && proc_m3_sbFlags[18],
	       proc_m7_elt_e2w[229:225] != 5'd17 && proc_m3_sbFlags[17],
	       proc_m7_elt_e2w[229:225] != 5'd16 && proc_m3_sbFlags[16],
	       proc_m7_elt_e2w[229:225] != 5'd15 && proc_m3_sbFlags[15],
	       proc_m7_elt_e2w[229:225] != 5'd14 && proc_m3_sbFlags[14],
	       proc_m7_elt_e2w[229:225] != 5'd13 && proc_m3_sbFlags[13],
	       proc_m7_elt_e2w[229:225] != 5'd12 && proc_m3_sbFlags[12],
	       proc_m7_elt_e2w[229:225] != 5'd11 && proc_m3_sbFlags[11],
	       proc_m7_elt_e2w[229:225] != 5'd10 && proc_m3_sbFlags[10],
	       proc_m7_elt_e2w[229:225] != 5'd9 && proc_m3_sbFlags[9],
	       proc_m7_elt_e2w[229:225] != 5'd8 && proc_m3_sbFlags[8],
	       proc_m7_elt_e2w[229:225] != 5'd7 && proc_m3_sbFlags[7],
	       proc_m7_elt_e2w[229:225] != 5'd6 && proc_m3_sbFlags[6],
	       proc_m7_elt_e2w[229:225] != 5'd5 && proc_m3_sbFlags[5],
	       proc_m7_elt_e2w[229:225] != 5'd4 && proc_m3_sbFlags[4],
	       proc_m7_elt_e2w[229:225] != 5'd3 && proc_m3_sbFlags[3],
	       proc_m7_elt_e2w[229:225] != 5'd2 && proc_m3_sbFlags[2],
	       proc_m7_elt_e2w[229:225] != 5'd1 && proc_m3_sbFlags[1],
	       proc_m7_elt_e2w[229:225] != 5'd0 && proc_m3_sbFlags[0] } ;
  assign MUX_proc_m3_sbFlags$write_1__VAL_3 =
	     { proc_m1_elt_f2d[76:72] == 5'd31 || proc_m3_sbFlags[31],
	       proc_m1_elt_f2d[76:72] == 5'd30 || proc_m3_sbFlags[30],
	       proc_m1_elt_f2d[76:72] == 5'd29 || proc_m3_sbFlags[29],
	       proc_m1_elt_f2d[76:72] == 5'd28 || proc_m3_sbFlags[28],
	       proc_m1_elt_f2d[76:72] == 5'd27 || proc_m3_sbFlags[27],
	       proc_m1_elt_f2d[76:72] == 5'd26 || proc_m3_sbFlags[26],
	       proc_m1_elt_f2d[76:72] == 5'd25 || proc_m3_sbFlags[25],
	       proc_m1_elt_f2d[76:72] == 5'd24 || proc_m3_sbFlags[24],
	       proc_m1_elt_f2d[76:72] == 5'd23 || proc_m3_sbFlags[23],
	       proc_m1_elt_f2d[76:72] == 5'd22 || proc_m3_sbFlags[22],
	       proc_m1_elt_f2d[76:72] == 5'd21 || proc_m3_sbFlags[21],
	       proc_m1_elt_f2d[76:72] == 5'd20 || proc_m3_sbFlags[20],
	       proc_m1_elt_f2d[76:72] == 5'd19 || proc_m3_sbFlags[19],
	       proc_m1_elt_f2d[76:72] == 5'd18 || proc_m3_sbFlags[18],
	       proc_m1_elt_f2d[76:72] == 5'd17 || proc_m3_sbFlags[17],
	       proc_m1_elt_f2d[76:72] == 5'd16 || proc_m3_sbFlags[16],
	       proc_m1_elt_f2d[76:72] == 5'd15 || proc_m3_sbFlags[15],
	       proc_m1_elt_f2d[76:72] == 5'd14 || proc_m3_sbFlags[14],
	       proc_m1_elt_f2d[76:72] == 5'd13 || proc_m3_sbFlags[13],
	       proc_m1_elt_f2d[76:72] == 5'd12 || proc_m3_sbFlags[12],
	       proc_m1_elt_f2d[76:72] == 5'd11 || proc_m3_sbFlags[11],
	       proc_m1_elt_f2d[76:72] == 5'd10 || proc_m3_sbFlags[10],
	       proc_m1_elt_f2d[76:72] == 5'd9 || proc_m3_sbFlags[9],
	       proc_m1_elt_f2d[76:72] == 5'd8 || proc_m3_sbFlags[8],
	       proc_m1_elt_f2d[76:72] == 5'd7 || proc_m3_sbFlags[7],
	       proc_m1_elt_f2d[76:72] == 5'd6 || proc_m3_sbFlags[6],
	       proc_m1_elt_f2d[76:72] == 5'd5 || proc_m3_sbFlags[5],
	       proc_m1_elt_f2d[76:72] == 5'd4 || proc_m3_sbFlags[4],
	       proc_m1_elt_f2d[76:72] == 5'd3 || proc_m3_sbFlags[3],
	       proc_m1_elt_f2d[76:72] == 5'd2 || proc_m3_sbFlags[2],
	       proc_m1_elt_f2d[76:72] == 5'd1 || proc_m3_sbFlags[1],
	       proc_m1_elt_f2d[76:72] == 5'd0 || proc_m3_sbFlags[0] } ;
  assign MUX_proc_m3_sbFlags$write_1__VAL_4 =
	     { x_5__h45738 == 5'd31 || proc_m3_sbFlags[31],
	       x_5__h45738 == 5'd30 || proc_m3_sbFlags[30],
	       x_5__h45738 == 5'd29 || proc_m3_sbFlags[29],
	       x_5__h45738 == 5'd28 || proc_m3_sbFlags[28],
	       x_5__h45738 == 5'd27 || proc_m3_sbFlags[27],
	       x_5__h45738 == 5'd26 || proc_m3_sbFlags[26],
	       x_5__h45738 == 5'd25 || proc_m3_sbFlags[25],
	       x_5__h45738 == 5'd24 || proc_m3_sbFlags[24],
	       x_5__h45738 == 5'd23 || proc_m3_sbFlags[23],
	       x_5__h45738 == 5'd22 || proc_m3_sbFlags[22],
	       x_5__h45738 == 5'd21 || proc_m3_sbFlags[21],
	       x_5__h45738 == 5'd20 || proc_m3_sbFlags[20],
	       x_5__h45738 == 5'd19 || proc_m3_sbFlags[19],
	       x_5__h45738 == 5'd18 || proc_m3_sbFlags[18],
	       x_5__h45738 == 5'd17 || proc_m3_sbFlags[17],
	       x_5__h45738 == 5'd16 || proc_m3_sbFlags[16],
	       x_5__h45738 == 5'd15 || proc_m3_sbFlags[15],
	       x_5__h45738 == 5'd14 || proc_m3_sbFlags[14],
	       x_5__h45738 == 5'd13 || proc_m3_sbFlags[13],
	       x_5__h45738 == 5'd12 || proc_m3_sbFlags[12],
	       x_5__h45738 == 5'd11 || proc_m3_sbFlags[11],
	       x_5__h45738 == 5'd10 || proc_m3_sbFlags[10],
	       x_5__h45738 == 5'd9 || proc_m3_sbFlags[9],
	       x_5__h45738 == 5'd8 || proc_m3_sbFlags[8],
	       x_5__h45738 == 5'd7 || proc_m3_sbFlags[7],
	       x_5__h45738 == 5'd6 || proc_m3_sbFlags[6],
	       x_5__h45738 == 5'd5 || proc_m3_sbFlags[5],
	       x_5__h45738 == 5'd4 || proc_m3_sbFlags[4],
	       x_5__h45738 == 5'd3 || proc_m3_sbFlags[3],
	       x_5__h45738 == 5'd2 || proc_m3_sbFlags[2],
	       x_5__h45738 == 5'd1 || proc_m3_sbFlags[1],
	       x_5__h45738 == 5'd0 || proc_m3_sbFlags[0] } ;
  assign MUX_proc_m3_sbFlags$write_1__VAL_5 =
	     { proc_m11_stalled[197:193] != 5'd31 && proc_m3_sbFlags[31],
	       proc_m11_stalled[197:193] != 5'd30 && proc_m3_sbFlags[30],
	       proc_m11_stalled[197:193] != 5'd29 && proc_m3_sbFlags[29],
	       proc_m11_stalled[197:193] != 5'd28 && proc_m3_sbFlags[28],
	       proc_m11_stalled[197:193] != 5'd27 && proc_m3_sbFlags[27],
	       proc_m11_stalled[197:193] != 5'd26 && proc_m3_sbFlags[26],
	       proc_m11_stalled[197:193] != 5'd25 && proc_m3_sbFlags[25],
	       proc_m11_stalled[197:193] != 5'd24 && proc_m3_sbFlags[24],
	       proc_m11_stalled[197:193] != 5'd23 && proc_m3_sbFlags[23],
	       proc_m11_stalled[197:193] != 5'd22 && proc_m3_sbFlags[22],
	       proc_m11_stalled[197:193] != 5'd21 && proc_m3_sbFlags[21],
	       proc_m11_stalled[197:193] != 5'd20 && proc_m3_sbFlags[20],
	       proc_m11_stalled[197:193] != 5'd19 && proc_m3_sbFlags[19],
	       proc_m11_stalled[197:193] != 5'd18 && proc_m3_sbFlags[18],
	       proc_m11_stalled[197:193] != 5'd17 && proc_m3_sbFlags[17],
	       proc_m11_stalled[197:193] != 5'd16 && proc_m3_sbFlags[16],
	       proc_m11_stalled[197:193] != 5'd15 && proc_m3_sbFlags[15],
	       proc_m11_stalled[197:193] != 5'd14 && proc_m3_sbFlags[14],
	       proc_m11_stalled[197:193] != 5'd13 && proc_m3_sbFlags[13],
	       proc_m11_stalled[197:193] != 5'd12 && proc_m3_sbFlags[12],
	       proc_m11_stalled[197:193] != 5'd11 && proc_m3_sbFlags[11],
	       proc_m11_stalled[197:193] != 5'd10 && proc_m3_sbFlags[10],
	       proc_m11_stalled[197:193] != 5'd9 && proc_m3_sbFlags[9],
	       proc_m11_stalled[197:193] != 5'd8 && proc_m3_sbFlags[8],
	       proc_m11_stalled[197:193] != 5'd7 && proc_m3_sbFlags[7],
	       proc_m11_stalled[197:193] != 5'd6 && proc_m3_sbFlags[6],
	       proc_m11_stalled[197:193] != 5'd5 && proc_m3_sbFlags[5],
	       proc_m11_stalled[197:193] != 5'd4 && proc_m3_sbFlags[4],
	       proc_m11_stalled[197:193] != 5'd3 && proc_m3_sbFlags[3],
	       proc_m11_stalled[197:193] != 5'd2 && proc_m3_sbFlags[2],
	       proc_m11_stalled[197:193] != 5'd1 && proc_m3_sbFlags[1],
	       proc_m11_stalled[197:193] != 5'd0 && proc_m3_sbFlags[0] } ;
  assign MUX_proc_m4_elt_d2e$write_1__VAL_1 =
	     { x_4__h38283,
	       proc_m1_elt_f2d[76:72],
	       x__h40233,
	       64'd0,
	       proc_m1_elt_f2d } ;
  assign MUX_proc_m4_elt_d2e$write_1__VAL_2 =
	     { x_4__h38283,
	       5'h0,
	       x__h45381,
	       x__h45485,
	       32'h0,
	       proc_m1_elt_f2d } ;
  assign MUX_proc_m4_elt_d2e$write_1__VAL_3 =
	     { x_4__h38283,
	       x_5__h45738,
	       32'h0,
	       SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226,
	       x__h45485,
	       proc_m1_elt_f2d } ;
  assign MUX_proc_m7_elt_e2w$write_1__VAL_1 =
	     { proc_m4_elt_d2e, x_6__h49402 } ;
  assign MUX_proc_m7_elt_e2w$write_1__VAL_2 = { proc_m4_elt_d2e, 32'h0 } ;
  assign MUX_rqs$enq_1__VAL_1 = { x__h54351, 33'd0 } ;
  assign MUX_rqs$enq_1__VAL_2 =
	     { x__h54351, 1'd1, proc_m7_elt_e2w[192:161] } ;

  // register proc_m11_stall
  assign proc_m11_stall$D_IN = !MUX_proc_m5_elt_w2d$write_1__PSEL_2 ;
  assign proc_m11_stall$EN =
	     WILL_FIRE_RL_proc_m11_repSt || WILL_FIRE_RL_proc_m11_repLd ||
	     WILL_FIRE_RL_proc_m11_reqSt ||
	     WILL_FIRE_RL_proc_m11_reqLd ;

  // register proc_m11_stalled
  assign proc_m11_stalled$D_IN = proc_m7_elt_e2w[231:32] ;
  assign proc_m11_stalled$EN = MUX_proc_m11_stall$write_1__SEL_2 ;

  // register proc_m1_elt_f2d
  assign proc_m1_elt_f2d$D_IN =
	     { x__h38027, proc_m8_pc, x_4__h37971, proc_m8_fEpoch } ;
  assign proc_m1_elt_f2d$EN = WILL_FIRE_RL_proc_m8_instFetch ;

  // register proc_m1_full_f2d
  assign proc_m1_full_f2d$D_IN =
	     !WILL_FIRE_RL_proc_m9_decodeNm &&
	     !WILL_FIRE_RL_proc_m9_decodeSt &&
	     !WILL_FIRE_RL_proc_m9_decodeLd &&
	     !WILL_FIRE_RL_proc_m8_modifyPc ;
  assign proc_m1_full_f2d$EN =
	     WILL_FIRE_RL_proc_m9_decodeNm || WILL_FIRE_RL_proc_m9_decodeSt ||
	     WILL_FIRE_RL_proc_m9_decodeLd ||
	     WILL_FIRE_RL_proc_m8_modifyPc ||
	     WILL_FIRE_RL_proc_m8_instFetch ;

  // register proc_m2_rf
  assign proc_m2_rf$D_IN =
	     WILL_FIRE_RL_proc_m11_repLd ?
	       MUX_proc_m2_rf$write_1__VAL_1 :
	       MUX_proc_m2_rf$write_1__VAL_2 ;
  assign proc_m2_rf$EN =
	     WILL_FIRE_RL_proc_m11_repLd || WILL_FIRE_RL_proc_m11_wbNm ;

  // register proc_m3_sbFlags
  always@(MUX_proc_m3_sbFlags$write_1__SEL_1 or
	  MUX_proc_m3_sbFlags$write_1__VAL_1 or
	  MUX_proc_m3_sbFlags$write_1__SEL_2 or
	  WILL_FIRE_RL_proc_m9_decodeLd or
	  MUX_proc_m3_sbFlags$write_1__VAL_3 or
	  WILL_FIRE_RL_proc_m9_decodeNm or
	  MUX_proc_m3_sbFlags$write_1__VAL_4 or
	  WILL_FIRE_RL_proc_m11_repLd or MUX_proc_m3_sbFlags$write_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_proc_m3_sbFlags$write_1__SEL_1:
	  proc_m3_sbFlags$D_IN = MUX_proc_m3_sbFlags$write_1__VAL_1;
      MUX_proc_m3_sbFlags$write_1__SEL_2:
	  proc_m3_sbFlags$D_IN = MUX_proc_m3_sbFlags$write_1__VAL_1;
      WILL_FIRE_RL_proc_m9_decodeLd:
	  proc_m3_sbFlags$D_IN = MUX_proc_m3_sbFlags$write_1__VAL_3;
      WILL_FIRE_RL_proc_m9_decodeNm:
	  proc_m3_sbFlags$D_IN = MUX_proc_m3_sbFlags$write_1__VAL_4;
      WILL_FIRE_RL_proc_m11_repLd:
	  proc_m3_sbFlags$D_IN = MUX_proc_m3_sbFlags$write_1__VAL_5;
      default: proc_m3_sbFlags$D_IN = 32'hAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign proc_m3_sbFlags$EN =
	     WILL_FIRE_RL_proc_m11_wrongEpoch &&
	     (proc_m7_elt_e2w[231:230] == 2'h0 ||
	      proc_m7_elt_e2w[231:230] == 2'h3) ||
	     WILL_FIRE_RL_proc_m11_wbNmZ ||
	     WILL_FIRE_RL_proc_m11_wbNm ||
	     WILL_FIRE_RL_proc_m9_decodeLd ||
	     WILL_FIRE_RL_proc_m9_decodeNm ||
	     WILL_FIRE_RL_proc_m11_repLd ;

  // register proc_m4_elt_d2e
  always@(WILL_FIRE_RL_proc_m9_decodeLd or
	  MUX_proc_m4_elt_d2e$write_1__VAL_1 or
	  WILL_FIRE_RL_proc_m9_decodeSt or
	  MUX_proc_m4_elt_d2e$write_1__VAL_2 or
	  WILL_FIRE_RL_proc_m9_decodeNm or MUX_proc_m4_elt_d2e$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_proc_m9_decodeLd:
	  proc_m4_elt_d2e$D_IN = MUX_proc_m4_elt_d2e$write_1__VAL_1;
      WILL_FIRE_RL_proc_m9_decodeSt:
	  proc_m4_elt_d2e$D_IN = MUX_proc_m4_elt_d2e$write_1__VAL_2;
      WILL_FIRE_RL_proc_m9_decodeNm:
	  proc_m4_elt_d2e$D_IN = MUX_proc_m4_elt_d2e$write_1__VAL_3;
      default: proc_m4_elt_d2e$D_IN =
		   200'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign proc_m4_elt_d2e$EN =
	     WILL_FIRE_RL_proc_m9_decodeLd || WILL_FIRE_RL_proc_m9_decodeSt ||
	     WILL_FIRE_RL_proc_m9_decodeNm ;

  // register proc_m4_full_d2e
  assign proc_m4_full_d2e$D_IN = !MUX_proc_m4_full_d2e$write_1__SEL_1 ;
  assign proc_m4_full_d2e$EN =
	     WILL_FIRE_RL_proc_m10_execBypass ||
	     WILL_FIRE_RL_proc_m10_execNm ||
	     WILL_FIRE_RL_proc_m9_decodeNm ||
	     WILL_FIRE_RL_proc_m9_decodeSt ||
	     WILL_FIRE_RL_proc_m9_decodeLd ;

  // register proc_m5_elt_w2d
  assign proc_m5_elt_w2d$D_IN =
	     MUX_proc_m5_elt_w2d$write_1__SEL_1 ? x_9__h54592 : x_10__h63228 ;
  assign proc_m5_elt_w2d$EN =
	     (WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ||
	      WILL_FIRE_RL_proc_m11_reqLdZ) &&
	     NOT_IF_proc_m7_elt_e2w_10_BITS_103_TO_97_49_EQ_ETC___d704 ||
	     (WILL_FIRE_RL_proc_m11_repSt || WILL_FIRE_RL_proc_m11_repLd) &&
	     NOT_IF_proc_m11_stalled_12_BITS_71_TO_65_81_EQ_ETC___d936 ;

  // register proc_m5_full_w2d
  assign proc_m5_full_w2d$D_IN = !WILL_FIRE_RL_proc_m8_modifyPc ;
  assign proc_m5_full_w2d$EN =
	     (WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ||
	      WILL_FIRE_RL_proc_m11_reqLdZ) &&
	     NOT_IF_proc_m7_elt_e2w_10_BITS_103_TO_97_49_EQ_ETC___d704 ||
	     (WILL_FIRE_RL_proc_m11_repSt || WILL_FIRE_RL_proc_m11_repLd) &&
	     NOT_IF_proc_m11_stalled_12_BITS_71_TO_65_81_EQ_ETC___d936 ||
	     WILL_FIRE_RL_proc_m8_modifyPc ;

  // register proc_m6_eEpoch
  assign proc_m6_eEpoch$D_IN =
	     MUX_proc_m6_eEpoch$write_1__SEL_1 ?
	       !proc_m6_eEpoch :
	       !proc_m6_eEpoch ;
  assign proc_m6_eEpoch$EN =
	     (WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ||
	      WILL_FIRE_RL_proc_m11_reqLdZ) &&
	     NOT_IF_proc_m7_elt_e2w_10_BITS_103_TO_97_49_EQ_ETC___d704 ||
	     (WILL_FIRE_RL_proc_m11_repSt || WILL_FIRE_RL_proc_m11_repLd) &&
	     NOT_IF_proc_m11_stalled_12_BITS_71_TO_65_81_EQ_ETC___d936 ;

  // register proc_m7_elt_e2w
  assign proc_m7_elt_e2w$D_IN =
	     WILL_FIRE_RL_proc_m10_execNm ?
	       MUX_proc_m7_elt_e2w$write_1__VAL_1 :
	       MUX_proc_m7_elt_e2w$write_1__VAL_2 ;
  assign proc_m7_elt_e2w$EN =
	     WILL_FIRE_RL_proc_m10_execNm ||
	     WILL_FIRE_RL_proc_m10_execBypass ;

  // register proc_m7_full_e2w
  assign proc_m7_full_e2w$D_IN = !MUX_proc_m7_full_e2w$write_1__SEL_1 ;
  assign proc_m7_full_e2w$EN =
	     WILL_FIRE_RL_proc_m11_wbNmZ || WILL_FIRE_RL_proc_m11_wbNm ||
	     WILL_FIRE_RL_proc_m11_reqSt ||
	     WILL_FIRE_RL_proc_m11_reqLdZ ||
	     WILL_FIRE_RL_proc_m11_reqLd ||
	     WILL_FIRE_RL_proc_m11_wrongEpoch ||
	     WILL_FIRE_RL_proc_m10_execBypass ||
	     WILL_FIRE_RL_proc_m10_execNm ;

  // register proc_m8_fEpoch
  assign proc_m8_fEpoch$D_IN = !proc_m8_fEpoch ;
  assign proc_m8_fEpoch$EN = WILL_FIRE_RL_proc_m8_modifyPc ;

  // register proc_m8_pc
  assign proc_m8_pc$D_IN =
	     WILL_FIRE_RL_proc_m8_modifyPc ? proc_m5_elt_w2d : x_4__h37971 ;
  assign proc_m8_pc$EN =
	     WILL_FIRE_RL_proc_m8_instFetch || WILL_FIRE_RL_proc_m8_modifyPc ;

  // register proc_m8_pgm
  assign proc_m8_pgm$D_IN =
	     { (proc_m8_pinitOfs == 5'd31) ? 32'd0 : proc_m8_pgm[1023:992],
	       (proc_m8_pinitOfs == 5'd30) ? 32'd0 : proc_m8_pgm[991:960],
	       (proc_m8_pinitOfs == 5'd29) ? 32'd0 : proc_m8_pgm[959:928],
	       (proc_m8_pinitOfs == 5'd28) ? 32'd0 : proc_m8_pgm[927:896],
	       (proc_m8_pinitOfs == 5'd27) ? 32'd0 : proc_m8_pgm[895:864],
	       (proc_m8_pinitOfs == 5'd26) ? 32'd0 : proc_m8_pgm[863:832],
	       (proc_m8_pinitOfs == 5'd25) ? 32'd0 : proc_m8_pgm[831:800],
	       (proc_m8_pinitOfs == 5'd24) ? 32'd0 : proc_m8_pgm[799:768],
	       (proc_m8_pinitOfs == 5'd23) ? 32'd0 : proc_m8_pgm[767:736],
	       (proc_m8_pinitOfs == 5'd22) ? 32'd0 : proc_m8_pgm[735:704],
	       (proc_m8_pinitOfs == 5'd21) ? 32'd0 : proc_m8_pgm[703:672],
	       (proc_m8_pinitOfs == 5'd20) ? 32'd0 : proc_m8_pgm[671:640],
	       (proc_m8_pinitOfs == 5'd19) ? 32'd0 : proc_m8_pgm[639:608],
	       (proc_m8_pinitOfs == 5'd18) ? 32'd0 : proc_m8_pgm[607:576],
	       (proc_m8_pinitOfs == 5'd17) ? 32'd0 : proc_m8_pgm[575:544],
	       (proc_m8_pinitOfs == 5'd16) ? 32'd0 : proc_m8_pgm[543:512],
	       (proc_m8_pinitOfs == 5'd15) ? 32'd0 : proc_m8_pgm[511:480],
	       (proc_m8_pinitOfs == 5'd14) ? 32'd0 : proc_m8_pgm[479:448],
	       (proc_m8_pinitOfs == 5'd13) ? 32'd0 : proc_m8_pgm[447:416],
	       (proc_m8_pinitOfs == 5'd12) ? 32'd0 : proc_m8_pgm[415:384],
	       (proc_m8_pinitOfs == 5'd11) ? 32'd0 : proc_m8_pgm[383:352],
	       (proc_m8_pinitOfs == 5'd10) ? 32'd0 : proc_m8_pgm[351:320],
	       (proc_m8_pinitOfs == 5'd9) ? 32'd0 : proc_m8_pgm[319:288],
	       (proc_m8_pinitOfs == 5'd8) ? 32'd0 : proc_m8_pgm[287:256],
	       (proc_m8_pinitOfs == 5'd7) ? 32'd0 : proc_m8_pgm[255:224],
	       (proc_m8_pinitOfs == 5'd6) ? 32'd0 : proc_m8_pgm[223:192],
	       (proc_m8_pinitOfs == 5'd5) ? 32'd0 : proc_m8_pgm[191:160],
	       (proc_m8_pinitOfs == 5'd4) ? 32'd0 : proc_m8_pgm[159:128],
	       (proc_m8_pinitOfs == 5'd3) ? 32'd0 : proc_m8_pgm[127:96],
	       (proc_m8_pinitOfs == 5'd2) ? 32'd0 : proc_m8_pgm[95:64],
	       (proc_m8_pinitOfs == 5'd1) ? 32'd0 : proc_m8_pgm[63:32],
	       (proc_m8_pinitOfs == 5'd0) ? 32'd0 : proc_m8_pgm[31:0] } ;
  assign proc_m8_pgm$EN =
	     !proc_m8_pinit && x__h34708 == 5'h0 ||
	     !proc_m8_pinit && x__h34708 != 5'h0 ;

  // register proc_m8_pinit
  assign proc_m8_pinit$D_IN = 1'd1 ;
  assign proc_m8_pinit$EN = !proc_m8_pinit && x__h34708 == 5'h0 ;

  // register proc_m8_pinitOfs
  assign proc_m8_pinitOfs$D_IN = proc_m8_pinitOfs + 5'h01 ;
  assign proc_m8_pinitOfs$EN = !proc_m8_pinit && x__h34708 != 5'h0 ;

  // submodule rqs
  assign rqs$D_IN =
	     WILL_FIRE_RL_proc_m11_reqLd ?
	       MUX_rqs$enq_1__VAL_1 :
	       MUX_rqs$enq_1__VAL_2 ;
  assign rqs$ENQ =
	     WILL_FIRE_RL_proc_m11_reqLd || WILL_FIRE_RL_proc_m11_reqSt ;
  assign rqs$DEQ = EN_obtain_rq_get ;
  assign rqs$CLR = 1'b0 ;

  // submodule rss
  assign rss$D_IN = send_rs_put ;
  assign rss$ENQ = EN_send_rs_put ;
  assign rss$DEQ = MUX_proc_m5_elt_w2d$write_1__PSEL_2 ;
  assign rss$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d685 =
	     x4803_MINUS_y4969__q7[31] ?
	       proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_SEXT__ETC___d677 :
	       proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_0x4___d678 ;
  assign IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d687 =
	     x4803_MINUS_y4969__q7[31] ?
	       proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_0x4___d678 :
	       proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_SEXT__ETC___d677 ;
  assign IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d917 =
	     x3447_MINUS_y3613__q8[31] ?
	       proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_SEXT_ETC___d909 :
	       proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_0x4___d910 ;
  assign IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d919 =
	     x3447_MINUS_y3613__q8[31] ?
	       proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_0x4___d910 :
	       proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_SEXT_ETC___d909 ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d730 =
	     { (proc_m11_stalled[197:193] == 5'd31) ?
		 rss$D_OUT :
		 proc_m2_rf[1023:992],
	       (proc_m11_stalled[197:193] == 5'd30) ?
		 rss$D_OUT :
		 proc_m2_rf[991:960],
	       (proc_m11_stalled[197:193] == 5'd29) ?
		 rss$D_OUT :
		 proc_m2_rf[959:928],
	       (proc_m11_stalled[197:193] == 5'd28) ?
		 rss$D_OUT :
		 proc_m2_rf[927:896] } ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d735 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d730,
	       (proc_m11_stalled[197:193] == 5'd27) ?
		 rss$D_OUT :
		 proc_m2_rf[895:864],
	       (proc_m11_stalled[197:193] == 5'd26) ?
		 rss$D_OUT :
		 proc_m2_rf[863:832] } ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d740 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d735,
	       (proc_m11_stalled[197:193] == 5'd25) ?
		 rss$D_OUT :
		 proc_m2_rf[831:800],
	       (proc_m11_stalled[197:193] == 5'd24) ?
		 rss$D_OUT :
		 proc_m2_rf[799:768] } ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d745 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d740,
	       (proc_m11_stalled[197:193] == 5'd23) ?
		 rss$D_OUT :
		 proc_m2_rf[767:736],
	       (proc_m11_stalled[197:193] == 5'd22) ?
		 rss$D_OUT :
		 proc_m2_rf[735:704] } ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d750 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d745,
	       (proc_m11_stalled[197:193] == 5'd21) ?
		 rss$D_OUT :
		 proc_m2_rf[703:672],
	       (proc_m11_stalled[197:193] == 5'd20) ?
		 rss$D_OUT :
		 proc_m2_rf[671:640] } ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d755 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d750,
	       (proc_m11_stalled[197:193] == 5'd19) ?
		 rss$D_OUT :
		 proc_m2_rf[639:608],
	       (proc_m11_stalled[197:193] == 5'd18) ?
		 rss$D_OUT :
		 proc_m2_rf[607:576] } ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d760 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d755,
	       (proc_m11_stalled[197:193] == 5'd17) ?
		 rss$D_OUT :
		 proc_m2_rf[575:544],
	       (proc_m11_stalled[197:193] == 5'd16) ?
		 rss$D_OUT :
		 proc_m2_rf[543:512] } ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d765 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d760,
	       (proc_m11_stalled[197:193] == 5'd15) ?
		 rss$D_OUT :
		 proc_m2_rf[511:480],
	       (proc_m11_stalled[197:193] == 5'd14) ?
		 rss$D_OUT :
		 proc_m2_rf[479:448] } ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d770 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d765,
	       (proc_m11_stalled[197:193] == 5'd13) ?
		 rss$D_OUT :
		 proc_m2_rf[447:416],
	       (proc_m11_stalled[197:193] == 5'd12) ?
		 rss$D_OUT :
		 proc_m2_rf[415:384] } ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d775 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d770,
	       (proc_m11_stalled[197:193] == 5'd11) ?
		 rss$D_OUT :
		 proc_m2_rf[383:352],
	       (proc_m11_stalled[197:193] == 5'd10) ?
		 rss$D_OUT :
		 proc_m2_rf[351:320] } ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d780 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d775,
	       (proc_m11_stalled[197:193] == 5'd9) ?
		 rss$D_OUT :
		 proc_m2_rf[319:288],
	       (proc_m11_stalled[197:193] == 5'd8) ?
		 rss$D_OUT :
		 proc_m2_rf[287:256] } ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d785 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d780,
	       (proc_m11_stalled[197:193] == 5'd7) ?
		 rss$D_OUT :
		 proc_m2_rf[255:224],
	       (proc_m11_stalled[197:193] == 5'd6) ?
		 rss$D_OUT :
		 proc_m2_rf[223:192] } ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d790 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d785,
	       (proc_m11_stalled[197:193] == 5'd5) ?
		 rss$D_OUT :
		 proc_m2_rf[191:160],
	       (proc_m11_stalled[197:193] == 5'd4) ?
		 rss$D_OUT :
		 proc_m2_rf[159:128] } ;
  assign IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d795 =
	     { IF_proc_m11_stalled_12_BITS_197_TO_193_19_EQ_3_ETC___d790,
	       (proc_m11_stalled[197:193] == 5'd3) ?
		 rss$D_OUT :
		 proc_m2_rf[127:96],
	       (proc_m11_stalled[197:193] == 5'd2) ?
		 rss$D_OUT :
		 proc_m2_rf[95:64] } ;
  assign NOT_IF_proc_m11_stalled_12_BITS_71_TO_65_81_EQ_ETC___d936 =
	     x_10__h63228 != proc_m11_stalled[32:1] ;
  assign NOT_IF_proc_m7_elt_e2w_10_BITS_103_TO_97_49_EQ_ETC___d704 =
	     x_9__h54592 != proc_m7_elt_e2w[64:33] ;
  assign NOT_SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m_ETC___d337 =
	     !SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 &&
	     !SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 &&
	     !CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 &&
	     proc_m1_elt_f2d[71:65] != 7'h03 &&
	     proc_m1_elt_f2d[71:65] != 7'h23 &&
	     proc_m1_full_f2d ;
  assign NOT_proc_m4_full_d2e_39_40_AND_NOT_SEL_ARR_pro_ETC___d187 =
	     !proc_m4_full_d2e &&
	     !SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 &&
	     !CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 &&
	     proc_m1_elt_f2d[71:65] == 7'h03 &&
	     proc_m1_full_f2d ;
  assign NOT_proc_m4_full_d2e_39_40_AND_NOT_SEL_ARR_pro_ETC___d318 =
	     !proc_m4_full_d2e &&
	     !SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 &&
	     !SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 &&
	     proc_m1_elt_f2d[71:65] == 7'h23 &&
	     proc_m1_full_f2d ;
  assign SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d670 =
	     x__h54803 == y__h54969 ;
  assign SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d689 =
	     x__h54803 < y__h54969 ;
  assign SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d902 =
	     x__h63447 == y__h63613 ;
  assign SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d921 =
	     x__h63447 < y__h63613 ;
  assign _0_CONCAT_proc_m4_elt_d2e_25_BITS_160_TO_129_41_ETC___d473 =
	     { 32'd0, proc_m4_elt_d2e[160:129] } *
	     { 32'd0, proc_m4_elt_d2e[128:97] } ;
  assign proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_0x4___d910 =
	     proc_m11_stalled[64:33] + 32'h00000004 ;
  assign proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_SEXT_ETC___d909 =
	     proc_m11_stalled[64:33] + y__h63737 ;
  assign proc_m11_stalled_BITS_96_TO_85__q3 = proc_m11_stalled[96:85] ;
  assign proc_m1_elt_f2d_BITS_96_TO_85__q4 = proc_m1_elt_f2d[96:85] ;
  assign proc_m4_elt_d2e_25_BITS_160_TO_129_41_MINUS_pr_ETC___d456 =
	     proc_m4_elt_d2e[160:129] - proc_m4_elt_d2e[128:97] ;
  assign proc_m4_elt_d2e_25_BITS_64_TO_33_34_PLUS_0x4___d435 =
	     proc_m4_elt_d2e[64:33] + 32'h00000004 ;
  assign proc_m4_elt_d2e_BITS_96_TO_85__q1 = proc_m4_elt_d2e[96:85] ;
  assign proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_0x4___d678 =
	     proc_m7_elt_e2w[96:65] + 32'h00000004 ;
  assign proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_SEXT__ETC___d677 =
	     proc_m7_elt_e2w[96:65] + y__h55093 ;
  assign proc_m7_elt_e2w_10_BIT_32_11_EQ_proc_m6_eEpoch_12___d513 =
	     proc_m7_elt_e2w[32] == proc_m6_eEpoch ;
  assign proc_m7_elt_e2w_BITS_128_TO_117__q2 = proc_m7_elt_e2w[128:117] ;
  assign x3447_MINUS_y3613__q8 = x__h63447 - y__h63613 ;
  assign x4803_MINUS_y4969__q7 = x__h54803 - y__h54969 ;
  assign x_4__h37971 = proc_m8_pc + 32'h00000004 ;
  assign x_5__h45738 =
	     (proc_m1_elt_f2d[71:65] == 7'h63) ?
	       5'h0 :
	       proc_m1_elt_f2d[76:72] ;
  assign x__h34708 = ~proc_m8_pinitOfs ;
  assign x__h40233 =
	     SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 +
	     { {20{proc_m1_elt_f2d_BITS_96_TO_85__q4[11]}},
	       proc_m1_elt_f2d_BITS_96_TO_85__q4 } ;
  assign x__h45381 =
	     SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 +
	     { {20{x__h45431[11]}}, x__h45431 } ;
  assign x__h45431 = { proc_m1_elt_f2d[96:90], proc_m1_elt_f2d[76:72] } ;
  assign x__h54351 = { 2'd0, proc_m7_elt_e2w[224:195] } ;
  assign x__h54655 =
	     { proc_m7_elt_e2w[116:109],
	       proc_m7_elt_e2w[117],
	       proc_m7_elt_e2w[127:118],
	       1'd0 } ;
  assign x__h55094 =
	     { proc_m7_elt_e2w[104],
	       proc_m7_elt_e2w[127:122],
	       proc_m7_elt_e2w[108:105],
	       1'd0 } ;
  assign x__h63299 =
	     { proc_m11_stalled[84:77],
	       proc_m11_stalled[85],
	       proc_m11_stalled[95:86],
	       1'd0 } ;
  assign x__h63738 =
	     { proc_m11_stalled[72],
	       proc_m11_stalled[95:90],
	       proc_m11_stalled[76:73],
	       1'd0 } ;
  assign y__h50180 =
	     { {20{proc_m4_elt_d2e_BITS_96_TO_85__q1[11]}},
	       proc_m4_elt_d2e_BITS_96_TO_85__q1 } ;
  assign y__h50362 = { 20'd0, proc_m4_elt_d2e[96:85] } ;
  assign y__h54652 = { {12{x__h54655[19]}}, x__h54655 } ;
  assign y__h54804 =
	     { {20{proc_m7_elt_e2w_BITS_128_TO_117__q2[11]}},
	       proc_m7_elt_e2w_BITS_128_TO_117__q2 } ;
  assign y__h55093 = { {20{x__h55094[11]}}, x__h55094 } ;
  assign y__h63294 = { {12{x__h63299[19]}}, x__h63299 } ;
  assign y__h63448 =
	     { {20{proc_m11_stalled_BITS_96_TO_85__q3[11]}},
	       proc_m11_stalled_BITS_96_TO_85__q3 } ;
  assign y__h63737 = { {20{x__h63738[11]}}, x__h63738 } ;
  always@(proc_m8_pc or proc_m8_pgm)
  begin
    case (proc_m8_pc[6:2])
      5'd0: x__h38027 = proc_m8_pgm[31:0];
      5'd1: x__h38027 = proc_m8_pgm[63:32];
      5'd2: x__h38027 = proc_m8_pgm[95:64];
      5'd3: x__h38027 = proc_m8_pgm[127:96];
      5'd4: x__h38027 = proc_m8_pgm[159:128];
      5'd5: x__h38027 = proc_m8_pgm[191:160];
      5'd6: x__h38027 = proc_m8_pgm[223:192];
      5'd7: x__h38027 = proc_m8_pgm[255:224];
      5'd8: x__h38027 = proc_m8_pgm[287:256];
      5'd9: x__h38027 = proc_m8_pgm[319:288];
      5'd10: x__h38027 = proc_m8_pgm[351:320];
      5'd11: x__h38027 = proc_m8_pgm[383:352];
      5'd12: x__h38027 = proc_m8_pgm[415:384];
      5'd13: x__h38027 = proc_m8_pgm[447:416];
      5'd14: x__h38027 = proc_m8_pgm[479:448];
      5'd15: x__h38027 = proc_m8_pgm[511:480];
      5'd16: x__h38027 = proc_m8_pgm[543:512];
      5'd17: x__h38027 = proc_m8_pgm[575:544];
      5'd18: x__h38027 = proc_m8_pgm[607:576];
      5'd19: x__h38027 = proc_m8_pgm[639:608];
      5'd20: x__h38027 = proc_m8_pgm[671:640];
      5'd21: x__h38027 = proc_m8_pgm[703:672];
      5'd22: x__h38027 = proc_m8_pgm[735:704];
      5'd23: x__h38027 = proc_m8_pgm[767:736];
      5'd24: x__h38027 = proc_m8_pgm[799:768];
      5'd25: x__h38027 = proc_m8_pgm[831:800];
      5'd26: x__h38027 = proc_m8_pgm[863:832];
      5'd27: x__h38027 = proc_m8_pgm[895:864];
      5'd28: x__h38027 = proc_m8_pgm[927:896];
      5'd29: x__h38027 = proc_m8_pgm[959:928];
      5'd30: x__h38027 = proc_m8_pgm[991:960];
      5'd31: x__h38027 = proc_m8_pgm[1023:992];
    endcase
  end
  always@(proc_m1_elt_f2d)
  begin
    case (proc_m1_elt_f2d[71:65])
      7'h03: x_4__h38283 = 2'h0;
      7'h23: x_4__h38283 = 2'h1;
      default: x_4__h38283 = 2'h3;
    endcase
  end
  always@(proc_m1_elt_f2d or proc_m2_rf)
  begin
    case (proc_m1_elt_f2d[89:85])
      5'd0: x__h45485 = proc_m2_rf[31:0];
      5'd1: x__h45485 = proc_m2_rf[63:32];
      5'd2: x__h45485 = proc_m2_rf[95:64];
      5'd3: x__h45485 = proc_m2_rf[127:96];
      5'd4: x__h45485 = proc_m2_rf[159:128];
      5'd5: x__h45485 = proc_m2_rf[191:160];
      5'd6: x__h45485 = proc_m2_rf[223:192];
      5'd7: x__h45485 = proc_m2_rf[255:224];
      5'd8: x__h45485 = proc_m2_rf[287:256];
      5'd9: x__h45485 = proc_m2_rf[319:288];
      5'd10: x__h45485 = proc_m2_rf[351:320];
      5'd11: x__h45485 = proc_m2_rf[383:352];
      5'd12: x__h45485 = proc_m2_rf[415:384];
      5'd13: x__h45485 = proc_m2_rf[447:416];
      5'd14: x__h45485 = proc_m2_rf[479:448];
      5'd15: x__h45485 = proc_m2_rf[511:480];
      5'd16: x__h45485 = proc_m2_rf[543:512];
      5'd17: x__h45485 = proc_m2_rf[575:544];
      5'd18: x__h45485 = proc_m2_rf[607:576];
      5'd19: x__h45485 = proc_m2_rf[639:608];
      5'd20: x__h45485 = proc_m2_rf[671:640];
      5'd21: x__h45485 = proc_m2_rf[703:672];
      5'd22: x__h45485 = proc_m2_rf[735:704];
      5'd23: x__h45485 = proc_m2_rf[767:736];
      5'd24: x__h45485 = proc_m2_rf[799:768];
      5'd25: x__h45485 = proc_m2_rf[831:800];
      5'd26: x__h45485 = proc_m2_rf[863:832];
      5'd27: x__h45485 = proc_m2_rf[895:864];
      5'd28: x__h45485 = proc_m2_rf[927:896];
      5'd29: x__h45485 = proc_m2_rf[959:928];
      5'd30: x__h45485 = proc_m2_rf[991:960];
      5'd31: x__h45485 = proc_m2_rf[1023:992];
    endcase
  end
  always@(proc_m7_elt_e2w or proc_m2_rf)
  begin
    case (proc_m7_elt_e2w[116:112])
      5'd0: x__h54803 = proc_m2_rf[31:0];
      5'd1: x__h54803 = proc_m2_rf[63:32];
      5'd2: x__h54803 = proc_m2_rf[95:64];
      5'd3: x__h54803 = proc_m2_rf[127:96];
      5'd4: x__h54803 = proc_m2_rf[159:128];
      5'd5: x__h54803 = proc_m2_rf[191:160];
      5'd6: x__h54803 = proc_m2_rf[223:192];
      5'd7: x__h54803 = proc_m2_rf[255:224];
      5'd8: x__h54803 = proc_m2_rf[287:256];
      5'd9: x__h54803 = proc_m2_rf[319:288];
      5'd10: x__h54803 = proc_m2_rf[351:320];
      5'd11: x__h54803 = proc_m2_rf[383:352];
      5'd12: x__h54803 = proc_m2_rf[415:384];
      5'd13: x__h54803 = proc_m2_rf[447:416];
      5'd14: x__h54803 = proc_m2_rf[479:448];
      5'd15: x__h54803 = proc_m2_rf[511:480];
      5'd16: x__h54803 = proc_m2_rf[543:512];
      5'd17: x__h54803 = proc_m2_rf[575:544];
      5'd18: x__h54803 = proc_m2_rf[607:576];
      5'd19: x__h54803 = proc_m2_rf[639:608];
      5'd20: x__h54803 = proc_m2_rf[671:640];
      5'd21: x__h54803 = proc_m2_rf[703:672];
      5'd22: x__h54803 = proc_m2_rf[735:704];
      5'd23: x__h54803 = proc_m2_rf[767:736];
      5'd24: x__h54803 = proc_m2_rf[799:768];
      5'd25: x__h54803 = proc_m2_rf[831:800];
      5'd26: x__h54803 = proc_m2_rf[863:832];
      5'd27: x__h54803 = proc_m2_rf[895:864];
      5'd28: x__h54803 = proc_m2_rf[927:896];
      5'd29: x__h54803 = proc_m2_rf[959:928];
      5'd30: x__h54803 = proc_m2_rf[991:960];
      5'd31: x__h54803 = proc_m2_rf[1023:992];
    endcase
  end
  always@(proc_m11_stalled or proc_m2_rf)
  begin
    case (proc_m11_stalled[84:80])
      5'd0: x__h63447 = proc_m2_rf[31:0];
      5'd1: x__h63447 = proc_m2_rf[63:32];
      5'd2: x__h63447 = proc_m2_rf[95:64];
      5'd3: x__h63447 = proc_m2_rf[127:96];
      5'd4: x__h63447 = proc_m2_rf[159:128];
      5'd5: x__h63447 = proc_m2_rf[191:160];
      5'd6: x__h63447 = proc_m2_rf[223:192];
      5'd7: x__h63447 = proc_m2_rf[255:224];
      5'd8: x__h63447 = proc_m2_rf[287:256];
      5'd9: x__h63447 = proc_m2_rf[319:288];
      5'd10: x__h63447 = proc_m2_rf[351:320];
      5'd11: x__h63447 = proc_m2_rf[383:352];
      5'd12: x__h63447 = proc_m2_rf[415:384];
      5'd13: x__h63447 = proc_m2_rf[447:416];
      5'd14: x__h63447 = proc_m2_rf[479:448];
      5'd15: x__h63447 = proc_m2_rf[511:480];
      5'd16: x__h63447 = proc_m2_rf[543:512];
      5'd17: x__h63447 = proc_m2_rf[575:544];
      5'd18: x__h63447 = proc_m2_rf[607:576];
      5'd19: x__h63447 = proc_m2_rf[639:608];
      5'd20: x__h63447 = proc_m2_rf[671:640];
      5'd21: x__h63447 = proc_m2_rf[703:672];
      5'd22: x__h63447 = proc_m2_rf[735:704];
      5'd23: x__h63447 = proc_m2_rf[767:736];
      5'd24: x__h63447 = proc_m2_rf[799:768];
      5'd25: x__h63447 = proc_m2_rf[831:800];
      5'd26: x__h63447 = proc_m2_rf[863:832];
      5'd27: x__h63447 = proc_m2_rf[895:864];
      5'd28: x__h63447 = proc_m2_rf[927:896];
      5'd29: x__h63447 = proc_m2_rf[959:928];
      5'd30: x__h63447 = proc_m2_rf[991:960];
      5'd31: x__h63447 = proc_m2_rf[1023:992];
    endcase
  end
  always@(proc_m7_elt_e2w or proc_m2_rf)
  begin
    case (proc_m7_elt_e2w[121:117])
      5'd0: y__h54969 = proc_m2_rf[31:0];
      5'd1: y__h54969 = proc_m2_rf[63:32];
      5'd2: y__h54969 = proc_m2_rf[95:64];
      5'd3: y__h54969 = proc_m2_rf[127:96];
      5'd4: y__h54969 = proc_m2_rf[159:128];
      5'd5: y__h54969 = proc_m2_rf[191:160];
      5'd6: y__h54969 = proc_m2_rf[223:192];
      5'd7: y__h54969 = proc_m2_rf[255:224];
      5'd8: y__h54969 = proc_m2_rf[287:256];
      5'd9: y__h54969 = proc_m2_rf[319:288];
      5'd10: y__h54969 = proc_m2_rf[351:320];
      5'd11: y__h54969 = proc_m2_rf[383:352];
      5'd12: y__h54969 = proc_m2_rf[415:384];
      5'd13: y__h54969 = proc_m2_rf[447:416];
      5'd14: y__h54969 = proc_m2_rf[479:448];
      5'd15: y__h54969 = proc_m2_rf[511:480];
      5'd16: y__h54969 = proc_m2_rf[543:512];
      5'd17: y__h54969 = proc_m2_rf[575:544];
      5'd18: y__h54969 = proc_m2_rf[607:576];
      5'd19: y__h54969 = proc_m2_rf[639:608];
      5'd20: y__h54969 = proc_m2_rf[671:640];
      5'd21: y__h54969 = proc_m2_rf[703:672];
      5'd22: y__h54969 = proc_m2_rf[735:704];
      5'd23: y__h54969 = proc_m2_rf[767:736];
      5'd24: y__h54969 = proc_m2_rf[799:768];
      5'd25: y__h54969 = proc_m2_rf[831:800];
      5'd26: y__h54969 = proc_m2_rf[863:832];
      5'd27: y__h54969 = proc_m2_rf[895:864];
      5'd28: y__h54969 = proc_m2_rf[927:896];
      5'd29: y__h54969 = proc_m2_rf[959:928];
      5'd30: y__h54969 = proc_m2_rf[991:960];
      5'd31: y__h54969 = proc_m2_rf[1023:992];
    endcase
  end
  always@(proc_m11_stalled or proc_m2_rf)
  begin
    case (proc_m11_stalled[89:85])
      5'd0: y__h63613 = proc_m2_rf[31:0];
      5'd1: y__h63613 = proc_m2_rf[63:32];
      5'd2: y__h63613 = proc_m2_rf[95:64];
      5'd3: y__h63613 = proc_m2_rf[127:96];
      5'd4: y__h63613 = proc_m2_rf[159:128];
      5'd5: y__h63613 = proc_m2_rf[191:160];
      5'd6: y__h63613 = proc_m2_rf[223:192];
      5'd7: y__h63613 = proc_m2_rf[255:224];
      5'd8: y__h63613 = proc_m2_rf[287:256];
      5'd9: y__h63613 = proc_m2_rf[319:288];
      5'd10: y__h63613 = proc_m2_rf[351:320];
      5'd11: y__h63613 = proc_m2_rf[383:352];
      5'd12: y__h63613 = proc_m2_rf[415:384];
      5'd13: y__h63613 = proc_m2_rf[447:416];
      5'd14: y__h63613 = proc_m2_rf[479:448];
      5'd15: y__h63613 = proc_m2_rf[511:480];
      5'd16: y__h63613 = proc_m2_rf[543:512];
      5'd17: y__h63613 = proc_m2_rf[575:544];
      5'd18: y__h63613 = proc_m2_rf[607:576];
      5'd19: y__h63613 = proc_m2_rf[639:608];
      5'd20: y__h63613 = proc_m2_rf[671:640];
      5'd21: y__h63613 = proc_m2_rf[703:672];
      5'd22: y__h63613 = proc_m2_rf[735:704];
      5'd23: y__h63613 = proc_m2_rf[767:736];
      5'd24: y__h63613 = proc_m2_rf[799:768];
      5'd25: y__h63613 = proc_m2_rf[831:800];
      5'd26: y__h63613 = proc_m2_rf[863:832];
      5'd27: y__h63613 = proc_m2_rf[895:864];
      5'd28: y__h63613 = proc_m2_rf[927:896];
      5'd29: y__h63613 = proc_m2_rf[959:928];
      5'd30: y__h63613 = proc_m2_rf[991:960];
      5'd31: y__h63613 = proc_m2_rf[1023:992];
    endcase
  end
  always@(proc_m1_elt_f2d or proc_m3_sbFlags)
  begin
    case (proc_m1_elt_f2d[84:80])
      5'd0:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[0];
      5'd1:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[1];
      5'd2:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[2];
      5'd3:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[3];
      5'd4:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[4];
      5'd5:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[5];
      5'd6:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[6];
      5'd7:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[7];
      5'd8:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[8];
      5'd9:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[9];
      5'd10:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[10];
      5'd11:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[11];
      5'd12:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[12];
      5'd13:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[13];
      5'd14:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[14];
      5'd15:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[15];
      5'd16:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[16];
      5'd17:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[17];
      5'd18:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[18];
      5'd19:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[19];
      5'd20:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[20];
      5'd21:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[21];
      5'd22:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[22];
      5'd23:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[23];
      5'd24:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[24];
      5'd25:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[25];
      5'd26:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[26];
      5'd27:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[27];
      5'd28:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[28];
      5'd29:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[29];
      5'd30:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[30];
      5'd31:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d177 =
	      proc_m3_sbFlags[31];
    endcase
  end
  always@(proc_m1_elt_f2d or proc_m2_rf)
  begin
    case (proc_m1_elt_f2d[84:80])
      5'd0:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[31:0];
      5'd1:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[63:32];
      5'd2:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[95:64];
      5'd3:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[127:96];
      5'd4:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[159:128];
      5'd5:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[191:160];
      5'd6:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[223:192];
      5'd7:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[255:224];
      5'd8:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[287:256];
      5'd9:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[319:288];
      5'd10:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[351:320];
      5'd11:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[383:352];
      5'd12:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[415:384];
      5'd13:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[447:416];
      5'd14:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[479:448];
      5'd15:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[511:480];
      5'd16:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[543:512];
      5'd17:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[575:544];
      5'd18:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[607:576];
      5'd19:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[639:608];
      5'd20:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[671:640];
      5'd21:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[703:672];
      5'd22:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[735:704];
      5'd23:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[767:736];
      5'd24:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[799:768];
      5'd25:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[831:800];
      5'd26:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[863:832];
      5'd27:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[895:864];
      5'd28:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[927:896];
      5'd29:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[959:928];
      5'd30:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[991:960];
      5'd31:
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d226 =
	      proc_m2_rf[1023:992];
    endcase
  end
  always@(proc_m1_elt_f2d or proc_m3_sbFlags)
  begin
    case (proc_m1_elt_f2d[89:85])
      5'd0:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[0];
      5'd1:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[1];
      5'd2:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[2];
      5'd3:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[3];
      5'd4:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[4];
      5'd5:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[5];
      5'd6:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[6];
      5'd7:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[7];
      5'd8:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[8];
      5'd9:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[9];
      5'd10:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[10];
      5'd11:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[11];
      5'd12:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[12];
      5'd13:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[13];
      5'd14:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[14];
      5'd15:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[15];
      5'd16:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[16];
      5'd17:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[17];
      5'd18:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[18];
      5'd19:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[19];
      5'd20:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[20];
      5'd21:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[21];
      5'd22:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[22];
      5'd23:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[23];
      5'd24:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[24];
      5'd25:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[25];
      5'd26:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[26];
      5'd27:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[27];
      5'd28:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[28];
      5'd29:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[29];
      5'd30:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[30];
      5'd31:
	  SEL_ARR_proc_m3_sbFlags_41_BIT_0_42_proc_m3_sb_ETC___d313 =
	      proc_m3_sbFlags[31];
    endcase
  end
  always@(proc_m1_elt_f2d or proc_m3_sbFlags)
  begin
    case (proc_m1_elt_f2d[76:72])
      5'd0:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[0];
      5'd1:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[1];
      5'd2:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[2];
      5'd3:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[3];
      5'd4:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[4];
      5'd5:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[5];
      5'd6:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[6];
      5'd7:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[7];
      5'd8:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[8];
      5'd9:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[9];
      5'd10:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[10];
      5'd11:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[11];
      5'd12:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[12];
      5'd13:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[13];
      5'd14:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[14];
      5'd15:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[15];
      5'd16:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[16];
      5'd17:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[17];
      5'd18:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[18];
      5'd19:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[19];
      5'd20:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[20];
      5'd21:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[21];
      5'd22:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[22];
      5'd23:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[23];
      5'd24:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[24];
      5'd25:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[25];
      5'd26:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[26];
      5'd27:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[27];
      5'd28:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[28];
      5'd29:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[29];
      5'd30:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[30];
      5'd31:
	  CASE_proc_m1_elt_f2d_BITS_76_TO_72_0_proc_m3_s_ETC__q5 =
	      proc_m3_sbFlags[31];
    endcase
  end
  always@(x_5__h45738 or proc_m3_sbFlags)
  begin
    case (x_5__h45738)
      5'd0:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[0];
      5'd1:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[1];
      5'd2:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[2];
      5'd3:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[3];
      5'd4:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[4];
      5'd5:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[5];
      5'd6:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[6];
      5'd7:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[7];
      5'd8:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[8];
      5'd9:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[9];
      5'd10:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[10];
      5'd11:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[11];
      5'd12:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[12];
      5'd13:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[13];
      5'd14:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[14];
      5'd15:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[15];
      5'd16:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[16];
      5'd17:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[17];
      5'd18:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[18];
      5'd19:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[19];
      5'd20:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[20];
      5'd21:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[21];
      5'd22:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[22];
      5'd23:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[23];
      5'd24:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[24];
      5'd25:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[25];
      5'd26:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[26];
      5'd27:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[27];
      5'd28:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[28];
      5'd29:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[29];
      5'd30:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[30];
      5'd31:
	  CASE_x_55738_0_proc_m3_sbFlags_BIT_0_1_proc_m3_ETC__q6 =
	      proc_m3_sbFlags[31];
    endcase
  end
  always@(proc_m7_elt_e2w or
	  proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_0x4___d678 or
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d670 or
	  proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_SEXT__ETC___d677 or
	  IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d685 or
	  IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d687 or
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d689)
  begin
    case (proc_m7_elt_e2w[111:109])
      3'h0:
	  IF_proc_m7_elt_e2w_10_BITS_111_TO_109_66_EQ_0x_ETC___d698 =
	      SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d670 ?
		proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_SEXT__ETC___d677 :
		proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_0x4___d678;
      3'h1:
	  IF_proc_m7_elt_e2w_10_BITS_111_TO_109_66_EQ_0x_ETC___d698 =
	      SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d670 ?
		proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_0x4___d678 :
		proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_SEXT__ETC___d677;
      3'h4:
	  IF_proc_m7_elt_e2w_10_BITS_111_TO_109_66_EQ_0x_ETC___d698 =
	      IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d685;
      3'h5:
	  IF_proc_m7_elt_e2w_10_BITS_111_TO_109_66_EQ_0x_ETC___d698 =
	      IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d687;
      3'h6:
	  IF_proc_m7_elt_e2w_10_BITS_111_TO_109_66_EQ_0x_ETC___d698 =
	      SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d689 ?
		proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_SEXT__ETC___d677 :
		proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_0x4___d678;
      3'h7:
	  IF_proc_m7_elt_e2w_10_BITS_111_TO_109_66_EQ_0x_ETC___d698 =
	      SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d689 ?
		proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_0x4___d678 :
		proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_SEXT__ETC___d677;
      default: IF_proc_m7_elt_e2w_10_BITS_111_TO_109_66_EQ_0x_ETC___d698 =
		   proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_0x4___d678;
    endcase
  end
  always@(proc_m7_elt_e2w or
	  proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_0x4___d678 or
	  IF_proc_m7_elt_e2w_10_BITS_111_TO_109_66_EQ_0x_ETC___d698 or
	  x__h54803 or y__h54804 or y__h54652)
  begin
    case (proc_m7_elt_e2w[103:97])
      7'h63:
	  x_9__h54592 =
	      IF_proc_m7_elt_e2w_10_BITS_111_TO_109_66_EQ_0x_ETC___d698;
      7'h67: x_9__h54592 = x__h54803 + y__h54804;
      7'h6F: x_9__h54592 = proc_m7_elt_e2w[96:65] + y__h54652;
      default: x_9__h54592 =
		   proc_m7_elt_e2w_10_BITS_96_TO_65_51_PLUS_0x4___d678;
    endcase
  end
  always@(proc_m11_stalled or
	  proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_0x4___d910 or
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d902 or
	  proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_SEXT_ETC___d909 or
	  IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d917 or
	  IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d919 or
	  SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d921)
  begin
    case (proc_m11_stalled[79:77])
      3'h0:
	  IF_proc_m11_stalled_12_BITS_79_TO_77_98_EQ_0x0_ETC___d930 =
	      SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d902 ?
		proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_SEXT_ETC___d909 :
		proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_0x4___d910;
      3'h1:
	  IF_proc_m11_stalled_12_BITS_79_TO_77_98_EQ_0x0_ETC___d930 =
	      SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d902 ?
		proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_0x4___d910 :
		proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_SEXT_ETC___d909;
      3'h4:
	  IF_proc_m11_stalled_12_BITS_79_TO_77_98_EQ_0x0_ETC___d930 =
	      IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d917;
      3'h5:
	  IF_proc_m11_stalled_12_BITS_79_TO_77_98_EQ_0x0_ETC___d930 =
	      IF_SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc__ETC___d919;
      3'h6:
	  IF_proc_m11_stalled_12_BITS_79_TO_77_98_EQ_0x0_ETC___d930 =
	      SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d921 ?
		proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_SEXT_ETC___d909 :
		proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_0x4___d910;
      3'h7:
	  IF_proc_m11_stalled_12_BITS_79_TO_77_98_EQ_0x0_ETC___d930 =
	      SEL_ARR_proc_m2_rf_92_BITS_31_TO_0_93_proc_m2__ETC___d921 ?
		proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_0x4___d910 :
		proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_SEXT_ETC___d909;
      default: IF_proc_m11_stalled_12_BITS_79_TO_77_98_EQ_0x0_ETC___d930 =
		   proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_0x4___d910;
    endcase
  end
  always@(proc_m11_stalled or
	  proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_0x4___d910 or
	  IF_proc_m11_stalled_12_BITS_79_TO_77_98_EQ_0x0_ETC___d930 or
	  x__h63447 or y__h63448 or y__h63294)
  begin
    case (proc_m11_stalled[71:65])
      7'h63:
	  x_10__h63228 =
	      IF_proc_m11_stalled_12_BITS_79_TO_77_98_EQ_0x0_ETC___d930;
      7'h67: x_10__h63228 = x__h63447 + y__h63448;
      7'h6F: x_10__h63228 = proc_m11_stalled[64:33] + y__h63294;
      default: x_10__h63228 =
		   proc_m11_stalled_12_BITS_64_TO_33_83_PLUS_0x4___d910;
    endcase
  end
  always@(proc_m4_elt_d2e or
	  proc_m4_elt_d2e_25_BITS_160_TO_129_41_MINUS_pr_ETC___d456)
  begin
    case (proc_m4_elt_d2e[79:77])
      3'h0:
	  CASE_proc_m4_elt_d2e_BITS_79_TO_77_0x0_proc_m4_ETC__q9 =
	      proc_m4_elt_d2e[160:129] + proc_m4_elt_d2e[128:97];
      3'h1:
	  CASE_proc_m4_elt_d2e_BITS_79_TO_77_0x0_proc_m4_ETC__q9 =
	      proc_m4_elt_d2e[160:129] << proc_m4_elt_d2e[101:97];
      3'h2:
	  CASE_proc_m4_elt_d2e_BITS_79_TO_77_0x0_proc_m4_ETC__q9 =
	      proc_m4_elt_d2e_25_BITS_160_TO_129_41_MINUS_pr_ETC___d456[31] ?
		32'h00000001 :
		32'h0;
      3'h3:
	  CASE_proc_m4_elt_d2e_BITS_79_TO_77_0x0_proc_m4_ETC__q9 =
	      (proc_m4_elt_d2e[160:129] < proc_m4_elt_d2e[128:97]) ?
		32'h00000001 :
		32'h0;
      3'h4:
	  CASE_proc_m4_elt_d2e_BITS_79_TO_77_0x0_proc_m4_ETC__q9 =
	      proc_m4_elt_d2e[160:129] ^ proc_m4_elt_d2e[128:97];
      3'h5:
	  CASE_proc_m4_elt_d2e_BITS_79_TO_77_0x0_proc_m4_ETC__q9 =
	      proc_m4_elt_d2e[160:129] >> proc_m4_elt_d2e[101:97];
      3'h6:
	  CASE_proc_m4_elt_d2e_BITS_79_TO_77_0x0_proc_m4_ETC__q9 =
	      proc_m4_elt_d2e[160:129] | proc_m4_elt_d2e[128:97];
      3'h7:
	  CASE_proc_m4_elt_d2e_BITS_79_TO_77_0x0_proc_m4_ETC__q9 =
	      proc_m4_elt_d2e[160:129] & proc_m4_elt_d2e[128:97];
    endcase
  end
  always@(proc_m4_elt_d2e or
	  proc_m4_elt_d2e_25_BITS_160_TO_129_41_MINUS_pr_ETC___d456 or
	  CASE_proc_m4_elt_d2e_BITS_79_TO_77_0x0_proc_m4_ETC__q9 or
	  _0_CONCAT_proc_m4_elt_d2e_25_BITS_160_TO_129_41_ETC___d473)
  begin
    case (proc_m4_elt_d2e[96:90])
      7'h0:
	  IF_proc_m4_elt_d2e_25_BITS_96_TO_90_37_EQ_0x0__ETC___d478 =
	      CASE_proc_m4_elt_d2e_BITS_79_TO_77_0x0_proc_m4_ETC__q9;
      7'h01:
	  IF_proc_m4_elt_d2e_25_BITS_96_TO_90_37_EQ_0x0__ETC___d478 =
	      (proc_m4_elt_d2e[79:77] == 3'h0) ?
		_0_CONCAT_proc_m4_elt_d2e_25_BITS_160_TO_129_41_ETC___d473[31:0] :
		32'h0;
      default: IF_proc_m4_elt_d2e_25_BITS_96_TO_90_37_EQ_0x0__ETC___d478 =
		   (proc_m4_elt_d2e[79:77] == 3'h0) ?
		     proc_m4_elt_d2e_25_BITS_160_TO_129_41_MINUS_pr_ETC___d456 :
		     32'h0;
    endcase
  end
  always@(proc_m4_elt_d2e or y__h50180 or y__h50362)
  begin
    case (proc_m4_elt_d2e[79:77])
      3'h0:
	  IF_proc_m4_elt_d2e_25_BITS_79_TO_77_39_EQ_0x0__ETC___d495 =
	      proc_m4_elt_d2e[160:129] + y__h50180;
      3'h1:
	  IF_proc_m4_elt_d2e_25_BITS_79_TO_77_39_EQ_0x0__ETC___d495 =
	      proc_m4_elt_d2e[160:129] << proc_m4_elt_d2e[89:85];
      3'h2:
	  IF_proc_m4_elt_d2e_25_BITS_79_TO_77_39_EQ_0x0__ETC___d495 =
	      (proc_m4_elt_d2e[160:129] < y__h50180) ? 32'h00000001 : 32'h0;
      3'h3:
	  IF_proc_m4_elt_d2e_25_BITS_79_TO_77_39_EQ_0x0__ETC___d495 =
	      (proc_m4_elt_d2e[160:129] < y__h50362) ? 32'h00000001 : 32'h0;
      3'h7:
	  IF_proc_m4_elt_d2e_25_BITS_79_TO_77_39_EQ_0x0__ETC___d495 =
	      proc_m4_elt_d2e[160:129] & y__h50180;
      default: IF_proc_m4_elt_d2e_25_BITS_79_TO_77_39_EQ_0x0__ETC___d495 =
		   32'h0;
    endcase
  end
  always@(proc_m4_elt_d2e or
	  IF_proc_m4_elt_d2e_25_BITS_79_TO_77_39_EQ_0x0__ETC___d495 or
	  IF_proc_m4_elt_d2e_25_BITS_96_TO_90_37_EQ_0x0__ETC___d478 or
	  proc_m4_elt_d2e_25_BITS_64_TO_33_34_PLUS_0x4___d435)
  begin
    case (proc_m4_elt_d2e[71:65])
      7'h1B:
	  x_6__h49402 =
	      IF_proc_m4_elt_d2e_25_BITS_79_TO_77_39_EQ_0x0__ETC___d495;
      7'h33:
	  x_6__h49402 =
	      IF_proc_m4_elt_d2e_25_BITS_96_TO_90_37_EQ_0x0__ETC___d478;
      7'h37: x_6__h49402 = { proc_m4_elt_d2e[96:77], 12'h0 };
      7'h67, 7'h6F:
	  x_6__h49402 = proc_m4_elt_d2e_25_BITS_64_TO_33_34_PLUS_0x4___d435;
      default: x_6__h49402 = 32'h0;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        proc_m11_stall <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m11_stalled <= `BSV_ASSIGNMENT_DELAY 200'd0;
	proc_m1_elt_f2d <= `BSV_ASSIGNMENT_DELAY 97'd0;
	proc_m1_full_f2d <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m2_rf <= `BSV_ASSIGNMENT_DELAY 1024'd0;
	proc_m3_sbFlags <= `BSV_ASSIGNMENT_DELAY 32'd0;
	proc_m4_elt_d2e <= `BSV_ASSIGNMENT_DELAY 200'd0;
	proc_m4_full_d2e <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m5_elt_w2d <= `BSV_ASSIGNMENT_DELAY 32'd0;
	proc_m5_full_w2d <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m6_eEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m7_elt_e2w <= `BSV_ASSIGNMENT_DELAY 232'd0;
	proc_m7_full_e2w <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m8_fEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m8_pc <= `BSV_ASSIGNMENT_DELAY 32'h0;
	proc_m8_pgm <= `BSV_ASSIGNMENT_DELAY 1024'd0;
	proc_m8_pinit <= `BSV_ASSIGNMENT_DELAY 1'd0;
	proc_m8_pinitOfs <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (proc_m11_stall$EN)
	  proc_m11_stall <= `BSV_ASSIGNMENT_DELAY proc_m11_stall$D_IN;
	if (proc_m11_stalled$EN)
	  proc_m11_stalled <= `BSV_ASSIGNMENT_DELAY proc_m11_stalled$D_IN;
	if (proc_m1_elt_f2d$EN)
	  proc_m1_elt_f2d <= `BSV_ASSIGNMENT_DELAY proc_m1_elt_f2d$D_IN;
	if (proc_m1_full_f2d$EN)
	  proc_m1_full_f2d <= `BSV_ASSIGNMENT_DELAY proc_m1_full_f2d$D_IN;
	if (proc_m2_rf$EN)
	  proc_m2_rf <= `BSV_ASSIGNMENT_DELAY proc_m2_rf$D_IN;
	if (proc_m3_sbFlags$EN)
	  proc_m3_sbFlags <= `BSV_ASSIGNMENT_DELAY proc_m3_sbFlags$D_IN;
	if (proc_m4_elt_d2e$EN)
	  proc_m4_elt_d2e <= `BSV_ASSIGNMENT_DELAY proc_m4_elt_d2e$D_IN;
	if (proc_m4_full_d2e$EN)
	  proc_m4_full_d2e <= `BSV_ASSIGNMENT_DELAY proc_m4_full_d2e$D_IN;
	if (proc_m5_elt_w2d$EN)
	  proc_m5_elt_w2d <= `BSV_ASSIGNMENT_DELAY proc_m5_elt_w2d$D_IN;
	if (proc_m5_full_w2d$EN)
	  proc_m5_full_w2d <= `BSV_ASSIGNMENT_DELAY proc_m5_full_w2d$D_IN;
	if (proc_m6_eEpoch$EN)
	  proc_m6_eEpoch <= `BSV_ASSIGNMENT_DELAY proc_m6_eEpoch$D_IN;
	if (proc_m7_elt_e2w$EN)
	  proc_m7_elt_e2w <= `BSV_ASSIGNMENT_DELAY proc_m7_elt_e2w$D_IN;
	if (proc_m7_full_e2w$EN)
	  proc_m7_full_e2w <= `BSV_ASSIGNMENT_DELAY proc_m7_full_e2w$D_IN;
	if (proc_m8_fEpoch$EN)
	  proc_m8_fEpoch <= `BSV_ASSIGNMENT_DELAY proc_m8_fEpoch$D_IN;
	if (proc_m8_pc$EN)
	  proc_m8_pc <= `BSV_ASSIGNMENT_DELAY proc_m8_pc$D_IN;
	if (proc_m8_pgm$EN)
	  proc_m8_pgm <= `BSV_ASSIGNMENT_DELAY proc_m8_pgm$D_IN;
	if (proc_m8_pinit$EN)
	  proc_m8_pinit <= `BSV_ASSIGNMENT_DELAY proc_m8_pinit$D_IN;
	if (proc_m8_pinitOfs$EN)
	  proc_m8_pinitOfs <= `BSV_ASSIGNMENT_DELAY proc_m8_pinitOfs$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    proc_m11_stall = 1'h0;
    proc_m11_stalled =
	200'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    proc_m1_elt_f2d = 97'h0AAAAAAAAAAAAAAAAAAAAAAAA;
    proc_m1_full_f2d = 1'h0;
    proc_m2_rf =
	1024'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    proc_m3_sbFlags = 32'hAAAAAAAA;
    proc_m4_elt_d2e = 200'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    proc_m4_full_d2e = 1'h0;
    proc_m5_elt_w2d = 32'hAAAAAAAA;
    proc_m5_full_w2d = 1'h0;
    proc_m6_eEpoch = 1'h0;
    proc_m7_elt_e2w =
	232'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    proc_m7_full_e2w = 1'h0;
    proc_m8_fEpoch = 1'h0;
    proc_m8_pc = 32'hAAAAAAAA;
    proc_m8_pgm =
	1024'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    proc_m8_pinit = 1'h0;
    proc_m8_pinitOfs = 5'h0A;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkTop

